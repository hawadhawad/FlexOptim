PARAMETER FILE: onlineParameters
Getting linkFile.
Getting demandFile.
WARNING: Field 'demandFile=' is empty.
Getting assignementFile.
WARNING: Field 'assignmentFile=' is empty.
Getting onlineDemandFolder.
Getting output path.
Getting number of demands to be treated at once.
Getting number of slices in output.
Getting time limit.
WARNING: Field 'timeLimit=' is empty.
Getting method.
Getting preprocessing level.
Getting objective.
Getting output level.
Getting partitioning policy parameters.
Getting number of slices in Left region.
Getting subgradient parameters.
Populating online demand files.
Finish input.
LINK FILE: ../Parameters/Instances/Spain_N5/InitialMappingMet1Slice30/Link.csv
DEMAND FILE: 
ASSIGNMENT FILE: 
> Number of online demand files: 1
--- READING INSTANCE... --- 
--- CREATING INITIAL MAPPING... --- 
Reading ../Parameters/Instances/Spain_N5/InitialMappingMet1Slice30/Link.csv.
Creating edge #1. 1 -- 3. lenght: 28, cost: 1
Creating edge #2. 1 -- 5. lenght: 25, cost: 1
Creating edge #3. 1 -- 2. lenght: 46, cost: 1
Creating edge #4. 1 -- 4. lenght: 36, cost: 1
Creating edge #5. 2 -- 3. lenght: 28, cost: 1
Creating edge #6. 2 -- 5. lenght: 23, cost: 1
Creating edge #7. 3 -- 4. lenght: 50, cost: 1
Starting with an empty initial mapping. 
0 demands were routed.
--- READING NEW ONLINE DEMANDS... --- 
Reading ../Parameters/Instances/Spain_N5/TestDemands/TM_1.csv ...

--- The Non Routed Demands ---
#1. 5 -- 1. nbSlices: 4, maxLength: 1500
#2. 1 -- 2. nbSlices: 5, maxLength: 1500
#3. 4 -- 1. nbSlices: 4, maxLength: 1500
#4. 1 -- 2. nbSlices: 4, maxLength: 1500
#5. 3 -- 1. nbSlices: 4, maxLength: 1500
#6. 3 -- 5. nbSlices: 3, maxLength: 3000
#7. 5 -- 2. nbSlices: 5, maxLength: 1500
#8. 3 -- 5. nbSlices: 5, maxLength: 1500
#9. 4 -- 2. nbSlices: 6, maxLength: 600
#10. 5 -- 4. nbSlices: 3, maxLength: 3000
#11. 4 -- 1. nbSlices: 3, maxLength: 3000
#12. 4 -- 5. nbSlices: 5, maxLength: 1500
#13. 3 -- 4. nbSlices: 6, maxLength: 600
#14. 3 -- 1. nbSlices: 4, maxLength: 1500
#15. 3 -- 4. nbSlices: 6, maxLength: 600
#16. 1 -- 2. nbSlices: 4, maxLength: 1500
#17. 4 -- 2. nbSlices: 4, maxLength: 1500
#18. 5 -- 1. nbSlices: 5, maxLength: 1500
#19. 1 -- 2. nbSlices: 4, maxLength: 1500
#20. 1 -- 2. nbSlices: 6, maxLength: 600
#21. 4 -- 3. nbSlices: 6, maxLength: 600
#22. 5 -- 4. nbSlices: 3, maxLength: 3000
#23. 1 -- 2. nbSlices: 3, maxLength: 3000
#24. 1 -- 2. nbSlices: 4, maxLength: 1500
#25. 5 -- 1. nbSlices: 4, maxLength: 1500
#26. 5 -- 2. nbSlices: 4, maxLength: 1500
#27. 1 -- 2. nbSlices: 5, maxLength: 1500
#28. 3 -- 2. nbSlices: 4, maxLength: 1500
#29. 3 -- 2. nbSlices: 3, maxLength: 3000
#30. 4 -- 2. nbSlices: 4, maxLength: 1500
#31. 2 -- 5. nbSlices: 6, maxLength: 600
#32. 5 -- 4. nbSlices: 5, maxLength: 1500
#33. 2 -- 1. nbSlices: 4, maxLength: 1500
#34. 3 -- 4. nbSlices: 6, maxLength: 600
#35. 4 -- 3. nbSlices: 6, maxLength: 600
#36. 4 -- 5. nbSlices: 6, maxLength: 600
#37. 5 -- 3. nbSlices: 4, maxLength: 1500
#38. 5 -- 1. nbSlices: 4, maxLength: 1500
#39. 4 -- 1. nbSlices: 5, maxLength: 1500
#40. 5 -- 2. nbSlices: 4, maxLength: 1500
#41. 3 -- 1. nbSlices: 4, maxLength: 1500
#42. 5 -- 2. nbSlices: 5, maxLength: 1500
#43. 1 -- 2. nbSlices: 3, maxLength: 3000
#44. 3 -- 4. nbSlices: 6, maxLength: 600
#45. 4 -- 3. nbSlices: 3, maxLength: 3000
#46. 5 -- 4. nbSlices: 3, maxLength: 3000
#47. 2 -- 3. nbSlices: 4, maxLength: 1500
#48. 1 -- 2. nbSlices: 6, maxLength: 600
#49. 3 -- 1. nbSlices: 6, maxLength: 600
#50. 4 -- 3. nbSlices: 5, maxLength: 1500
#51. 1 -- 2. nbSlices: 6, maxLength: 600
#52. 1 -- 2. nbSlices: 6, maxLength: 600
#53. 3 -- 1. nbSlices: 6, maxLength: 600
#54. 3 -- 2. nbSlices: 4, maxLength: 1500
#55. 2 -- 4. nbSlices: 4, maxLength: 1500
#56. 4 -- 2. nbSlices: 4, maxLength: 1500
#57. 4 -- 5. nbSlices: 3, maxLength: 3000
#58. 4 -- 5. nbSlices: 3, maxLength: 3000
#59. 4 -- 1. nbSlices: 4, maxLength: 1500
#60. 2 -- 3. nbSlices: 5, maxLength: 1500
#61. 2 -- 1. nbSlices: 4, maxLength: 1500
#62. 3 -- 4. nbSlices: 6, maxLength: 600
#63. 3 -- 4. nbSlices: 6, maxLength: 600
#64. 2 -- 1. nbSlices: 6, maxLength: 600
#65. 3 -- 2. nbSlices: 5, maxLength: 1500
#66. 4 -- 1. nbSlices: 6, maxLength: 600
#67. 2 -- 4. nbSlices: 5, maxLength: 1500
#68. 3 -- 5. nbSlices: 6, maxLength: 600
#69. 4 -- 2. nbSlices: 5, maxLength: 1500
#70. 3 -- 4. nbSlices: 6, maxLength: 600
#71. 4 -- 5. nbSlices: 6, maxLength: 600
#72. 5 -- 4. nbSlices: 6, maxLength: 600
#73. 5 -- 3. nbSlices: 4, maxLength: 1500
#74. 4 -- 5. nbSlices: 4, maxLength: 1500
#75. 2 -- 4. nbSlices: 6, maxLength: 600
#76. 2 -- 5. nbSlices: 4, maxLength: 1500
#77. 1 -- 2. nbSlices: 4, maxLength: 1500
#78. 4 -- 2. nbSlices: 4, maxLength: 1500
#79. 2 -- 4. nbSlices: 5, maxLength: 1500
#80. 4 -- 2. nbSlices: 3, maxLength: 3000
#81. 4 -- 2. nbSlices: 3, maxLength: 3000
#82. 2 -- 1. nbSlices: 5, maxLength: 1500
#83. 1 -- 2. nbSlices: 4, maxLength: 1500
#84. 4 -- 5. nbSlices: 6, maxLength: 600
#85. 4 -- 2. nbSlices: 3, maxLength: 3000
#86. 3 -- 1. nbSlices: 6, maxLength: 600
#87. 4 -- 1. nbSlices: 5, maxLength: 1500
#88. 1 -- 2. nbSlices: 6, maxLength: 600
#89. 5 -- 3. nbSlices: 3, maxLength: 3000
#90. 2 -- 4. nbSlices: 3, maxLength: 3000
#91. 5 -- 2. nbSlices: 4, maxLength: 1500
#92. 4 -- 2. nbSlices: 6, maxLength: 600
#93. 1 -- 2. nbSlices: 4, maxLength: 1500
#94. 4 -- 2. nbSlices: 5, maxLength: 1500
#95. 3 -- 1. nbSlices: 6, maxLength: 600
#96. 1 -- 2. nbSlices: 5, maxLength: 1500
#97. 5 -- 1. nbSlices: 6, maxLength: 600
#98. 1 -- 2. nbSlices: 4, maxLength: 1500
#99. 4 -- 2. nbSlices: 4, maxLength: 1500
#100. 5 -- 3. nbSlices: 4, maxLength: 1500
#101. 1 -- 2. nbSlices: 5, maxLength: 1500
#102. 5 -- 1. nbSlices: 3, maxLength: 3000
#103. 4 -- 1. nbSlices: 4, maxLength: 1500
#104. 5 -- 1. nbSlices: 4, maxLength: 1500
#105. 3 -- 5. nbSlices: 4, maxLength: 1500
#106. 3 -- 2. nbSlices: 3, maxLength: 3000
#107. 5 -- 1. nbSlices: 3, maxLength: 3000
#108. 4 -- 1. nbSlices: 3, maxLength: 3000
#109. 5 -- 1. nbSlices: 5, maxLength: 1500
#110. 3 -- 4. nbSlices: 5, maxLength: 1500
#111. 3 -- 1. nbSlices: 3, maxLength: 3000
#112. 4 -- 3. nbSlices: 5, maxLength: 1500
#113. 1 -- 2. nbSlices: 3, maxLength: 3000
#114. 2 -- 5. nbSlices: 6, maxLength: 600
#115. 5 -- 1. nbSlices: 3, maxLength: 3000
#116. 5 -- 4. nbSlices: 6, maxLength: 600
#117. 5 -- 3. nbSlices: 4, maxLength: 1500
#118. 5 -- 3. nbSlices: 4, maxLength: 1500
#119. 5 -- 1. nbSlices: 6, maxLength: 600
#120. 2 -- 4. nbSlices: 6, maxLength: 600
#121. 3 -- 5. nbSlices: 3, maxLength: 3000
#122. 2 -- 5. nbSlices: 6, maxLength: 600
#123. 1 -- 2. nbSlices: 5, maxLength: 1500
#124. 5 -- 2. nbSlices: 4, maxLength: 1500
#125. 2 -- 3. nbSlices: 3, maxLength: 3000
#126. 3 -- 5. nbSlices: 5, maxLength: 1500
#127. 3 -- 1. nbSlices: 4, maxLength: 1500
#128. 5 -- 2. nbSlices: 4, maxLength: 1500
#129. 4 -- 1. nbSlices: 3, maxLength: 3000
#130. 4 -- 2. nbSlices: 5, maxLength: 1500
#131. 2 -- 1. nbSlices: 5, maxLength: 1500
#132. 5 -- 3. nbSlices: 5, maxLength: 1500
#133. 4 -- 1. nbSlices: 6, maxLength: 600
#134. 5 -- 2. nbSlices: 3, maxLength: 3000
#135. 1 -- 2. nbSlices: 5, maxLength: 1500
#136. 4 -- 1. nbSlices: 3, maxLength: 3000
#137. 4 -- 1. nbSlices: 6, maxLength: 600
#138. 1 -- 2. nbSlices: 5, maxLength: 1500
#139. 2 -- 1. nbSlices: 5, maxLength: 1500
#140. 4 -- 3. nbSlices: 3, maxLength: 3000
#141. 2 -- 4. nbSlices: 6, maxLength: 600
#142. 2 -- 4. nbSlices: 4, maxLength: 1500
#143. 5 -- 4. nbSlices: 5, maxLength: 1500
#144. 1 -- 2. nbSlices: 6, maxLength: 600
#145. 5 -- 2. nbSlices: 4, maxLength: 1500
#146. 2 -- 1. nbSlices: 3, maxLength: 3000
#147. 4 -- 3. nbSlices: 4, maxLength: 1500
#148. 1 -- 2. nbSlices: 3, maxLength: 3000
#149. 4 -- 2. nbSlices: 6, maxLength: 600
#150. 3 -- 5. nbSlices: 5, maxLength: 1500
#151. 2 -- 3. nbSlices: 4, maxLength: 1500
#152. 3 -- 5. nbSlices: 3, maxLength: 3000
#153. 3 -- 4. nbSlices: 3, maxLength: 3000
#154. 1 -- 2. nbSlices: 4, maxLength: 1500
#155. 4 -- 1. nbSlices: 3, maxLength: 3000
#156. 2 -- 5. nbSlices: 6, maxLength: 600
#157. 5 -- 2. nbSlices: 3, maxLength: 3000
#158. 5 -- 4. nbSlices: 3, maxLength: 3000
#159. 5 -- 3. nbSlices: 5, maxLength: 1500
#160. 4 -- 5. nbSlices: 6, maxLength: 600
#161. 5 -- 4. nbSlices: 6, maxLength: 600
#162. 3 -- 5. nbSlices: 6, maxLength: 600
#163. 2 -- 5. nbSlices: 3, maxLength: 3000
#164. 1 -- 2. nbSlices: 3, maxLength: 3000
#165. 4 -- 2. nbSlices: 5, maxLength: 1500
#166. 4 -- 5. nbSlices: 6, maxLength: 600
#167. 1 -- 2. nbSlices: 5, maxLength: 1500
#168. 3 -- 2. nbSlices: 6, maxLength: 600
#169. 1 -- 2. nbSlices: 3, maxLength: 3000
#170. 2 -- 4. nbSlices: 6, maxLength: 600
#171. 1 -- 2. nbSlices: 3, maxLength: 3000
#172. 4 -- 1. nbSlices: 5, maxLength: 1500
#173. 5 -- 3. nbSlices: 4, maxLength: 1500
#174. 1 -- 2. nbSlices: 6, maxLength: 600
#175. 1 -- 2. nbSlices: 5, maxLength: 1500
#176. 3 -- 2. nbSlices: 4, maxLength: 1500
#177. 2 -- 1. nbSlices: 5, maxLength: 1500
#178. 2 -- 3. nbSlices: 6, maxLength: 600
#179. 5 -- 2. nbSlices: 4, maxLength: 1500
#180. 4 -- 5. nbSlices: 3, maxLength: 3000
#181. 4 -- 3. nbSlices: 3, maxLength: 3000
#182. 5 -- 4. nbSlices: 4, maxLength: 1500
#183. 4 -- 3. nbSlices: 5, maxLength: 1500
#184. 5 -- 2. nbSlices: 3, maxLength: 3000
#185. 1 -- 2. nbSlices: 6, maxLength: 600
#186. 1 -- 2. nbSlices: 3, maxLength: 3000
#187. 2 -- 1. nbSlices: 3, maxLength: 3000
#188. 4 -- 3. nbSlices: 5, maxLength: 1500
#189. 3 -- 2. nbSlices: 6, maxLength: 600
#190. 3 -- 4. nbSlices: 3, maxLength: 3000
#191. 4 -- 1. nbSlices: 6, maxLength: 600
#192. 2 -- 4. nbSlices: 4, maxLength: 1500
#193. 2 -- 4. nbSlices: 3, maxLength: 3000
#194. 4 -- 2. nbSlices: 5, maxLength: 1500
#195. 2 -- 4. nbSlices: 5, maxLength: 1500
#196. 2 -- 5. nbSlices: 3, maxLength: 3000
#197. 5 -- 4. nbSlices: 4, maxLength: 1500
#198. 5 -- 3. nbSlices: 6, maxLength: 600
#199. 2 -- 4. nbSlices: 5, maxLength: 1500
#200. 5 -- 1. nbSlices: 6, maxLength: 600
#201. 3 -- 1. nbSlices: 5, maxLength: 1500
#202. 3 -- 1. nbSlices: 5, maxLength: 1500
#203. 3 -- 1. nbSlices: 6, maxLength: 600
#204. 4 -- 1. nbSlices: 6, maxLength: 600
#205. 4 -- 2. nbSlices: 4, maxLength: 1500
#206. 4 -- 3. nbSlices: 4, maxLength: 1500
#207. 5 -- 4. nbSlices: 6, maxLength: 600
#208. 2 -- 3. nbSlices: 6, maxLength: 600
#209. 4 -- 2. nbSlices: 6, maxLength: 600
#210. 1 -- 2. nbSlices: 4, maxLength: 1500
#211. 2 -- 5. nbSlices: 3, maxLength: 3000
#212. 4 -- 2. nbSlices: 6, maxLength: 600
#213. 1 -- 2. nbSlices: 5, maxLength: 1500
#214. 4 -- 3. nbSlices: 4, maxLength: 1500
#215. 2 -- 4. nbSlices: 3, maxLength: 3000
#216. 3 -- 2. nbSlices: 4, maxLength: 1500
#217. 1 -- 2. nbSlices: 3, maxLength: 3000
#218. 5 -- 4. nbSlices: 4, maxLength: 1500
#219. 1 -- 2. nbSlices: 5, maxLength: 1500
#220. 4 -- 1. nbSlices: 4, maxLength: 1500
#221. 1 -- 2. nbSlices: 4, maxLength: 1500
#222. 5 -- 2. nbSlices: 5, maxLength: 1500
#223. 3 -- 5. nbSlices: 5, maxLength: 1500
#224. 5 -- 3. nbSlices: 6, maxLength: 600
#225. 1 -- 2. nbSlices: 5, maxLength: 1500
#226. 3 -- 4. nbSlices: 3, maxLength: 3000
#227. 1 -- 2. nbSlices: 4, maxLength: 1500
#228. 1 -- 2. nbSlices: 6, maxLength: 600
#229. 2 -- 4. nbSlices: 6, maxLength: 600
#230. 1 -- 2. nbSlices: 5, maxLength: 1500
#231. 2 -- 5. nbSlices: 4, maxLength: 1500
#232. 4 -- 2. nbSlices: 5, maxLength: 1500
#233. 3 -- 1. nbSlices: 4, maxLength: 1500
#234. 3 -- 5. nbSlices: 6, maxLength: 600
#235. 4 -- 5. nbSlices: 6, maxLength: 600
#236. 4 -- 5. nbSlices: 5, maxLength: 1500
#237. 5 -- 1. nbSlices: 6, maxLength: 600
#238. 1 -- 2. nbSlices: 6, maxLength: 600
#239. 2 -- 1. nbSlices: 3, maxLength: 3000
#240. 5 -- 4. nbSlices: 3, maxLength: 3000
#241. 4 -- 2. nbSlices: 4, maxLength: 1500
#242. 5 -- 1. nbSlices: 3, maxLength: 3000
#243. 5 -- 3. nbSlices: 6, maxLength: 600
#244. 2 -- 3. nbSlices: 4, maxLength: 1500
#245. 5 -- 1. nbSlices: 5, maxLength: 1500
#246. 4 -- 3. nbSlices: 5, maxLength: 1500
#247. 1 -- 2. nbSlices: 3, maxLength: 3000
#248. 3 -- 5. nbSlices: 4, maxLength: 1500
#249. 1 -- 2. nbSlices: 6, maxLength: 600
#250. 2 -- 5. nbSlices: 3, maxLength: 3000
#251. 4 -- 2. nbSlices: 6, maxLength: 600
#252. 2 -- 3. nbSlices: 5, maxLength: 1500
#253. 2 -- 3. nbSlices: 4, maxLength: 1500
#254. 4 -- 2. nbSlices: 4, maxLength: 1500
#255. 4 -- 2. nbSlices: 6, maxLength: 600
#256. 4 -- 1. nbSlices: 5, maxLength: 1500
#257. 2 -- 4. nbSlices: 5, maxLength: 1500
#258. 2 -- 4. nbSlices: 3, maxLength: 3000
#259. 3 -- 5. nbSlices: 5, maxLength: 1500
#260. 3 -- 5. nbSlices: 6, maxLength: 600
#261. 3 -- 1. nbSlices: 4, maxLength: 1500
#262. 4 -- 3. nbSlices: 6, maxLength: 600
#263. 4 -- 5. nbSlices: 5, maxLength: 1500
#264. 2 -- 1. nbSlices: 4, maxLength: 1500
#265. 3 -- 5. nbSlices: 3, maxLength: 3000
#266. 1 -- 2. nbSlices: 4, maxLength: 1500
#267. 4 -- 3. nbSlices: 4, maxLength: 1500
#268. 5 -- 4. nbSlices: 4, maxLength: 1500
#269. 3 -- 4. nbSlices: 4, maxLength: 1500
#270. 5 -- 2. nbSlices: 6, maxLength: 600
#271. 4 -- 2. nbSlices: 5, maxLength: 1500
#272. 3 -- 4. nbSlices: 5, maxLength: 1500
#273. 4 -- 3. nbSlices: 6, maxLength: 600
#274. 4 -- 1. nbSlices: 6, maxLength: 600
#275. 1 -- 2. nbSlices: 4, maxLength: 1500
#276. 4 -- 5. nbSlices: 6, maxLength: 600
#277. 1 -- 2. nbSlices: 3, maxLength: 3000
#278. 2 -- 3. nbSlices: 5, maxLength: 1500
#279. 3 -- 1. nbSlices: 6, maxLength: 600
#280. 2 -- 4. nbSlices: 6, maxLength: 600
#281. 5 -- 4. nbSlices: 3, maxLength: 3000
#282. 2 -- 4. nbSlices: 6, maxLength: 600
#283. 5 -- 1. nbSlices: 6, maxLength: 600
#284. 4 -- 1. nbSlices: 6, maxLength: 600
#285. 2 -- 3. nbSlices: 4, maxLength: 1500
#286. 3 -- 2. nbSlices: 6, maxLength: 600
#287. 2 -- 1. nbSlices: 4, maxLength: 1500
#288. 1 -- 2. nbSlices: 5, maxLength: 1500
#289. 1 -- 2. nbSlices: 6, maxLength: 600
#290. 3 -- 1. nbSlices: 6, maxLength: 600
#291. 1 -- 2. nbSlices: 4, maxLength: 1500
#292. 2 -- 4. nbSlices: 4, maxLength: 1500
#293. 1 -- 2. nbSlices: 6, maxLength: 600
#294. 5 -- 2. nbSlices: 3, maxLength: 3000
#295. 4 -- 5. nbSlices: 6, maxLength: 600
#296. 1 -- 2. nbSlices: 3, maxLength: 3000
#297. 2 -- 1. nbSlices: 5, maxLength: 1500
#298. 2 -- 5. nbSlices: 3, maxLength: 3000
#299. 4 -- 3. nbSlices: 4, maxLength: 1500
#300. 5 -- 4. nbSlices: 4, maxLength: 1500
#301. 5 -- 1. nbSlices: 4, maxLength: 1500
#302. 1 -- 2. nbSlices: 6, maxLength: 600
#303. 2 -- 1. nbSlices: 3, maxLength: 3000
#304. 1 -- 2. nbSlices: 5, maxLength: 1500
#305. 2 -- 3. nbSlices: 4, maxLength: 1500
#306. 5 -- 4. nbSlices: 3, maxLength: 3000
#307. 3 -- 5. nbSlices: 5, maxLength: 1500
#308. 5 -- 1. nbSlices: 5, maxLength: 1500
#309. 5 -- 1. nbSlices: 6, maxLength: 600
#310. 1 -- 2. nbSlices: 3, maxLength: 3000
#311. 2 -- 3. nbSlices: 6, maxLength: 600
#312. 1 -- 2. nbSlices: 3, maxLength: 3000
#313. 3 -- 1. nbSlices: 6, maxLength: 600
#314. 4 -- 3. nbSlices: 4, maxLength: 1500
#315. 5 -- 3. nbSlices: 3, maxLength: 3000
#316. 1 -- 2. nbSlices: 4, maxLength: 1500
#317. 2 -- 5. nbSlices: 3, maxLength: 3000
#318. 3 -- 5. nbSlices: 5, maxLength: 1500
#319. 2 -- 1. nbSlices: 3, maxLength: 3000
#320. 3 -- 4. nbSlices: 5, maxLength: 1500
#321. 4 -- 2. nbSlices: 6, maxLength: 600
#322. 4 -- 5. nbSlices: 6, maxLength: 600
#323. 5 -- 4. nbSlices: 3, maxLength: 3000
#324. 3 -- 1. nbSlices: 4, maxLength: 1500
#325. 3 -- 4. nbSlices: 6, maxLength: 600
#326. 1 -- 2. nbSlices: 4, maxLength: 1500
#327. 3 -- 5. nbSlices: 3, maxLength: 3000
#328. 3 -- 2. nbSlices: 5, maxLength: 1500
#329. 2 -- 1. nbSlices: 4, maxLength: 1500
#330. 3 -- 2. nbSlices: 6, maxLength: 600
#331. 2 -- 4. nbSlices: 4, maxLength: 1500
#332. 2 -- 3. nbSlices: 6, maxLength: 600
#333. 2 -- 5. nbSlices: 3, maxLength: 3000
#334. 5 -- 1. nbSlices: 6, maxLength: 600
#335. 3 -- 4. nbSlices: 5, maxLength: 1500
#336. 2 -- 3. nbSlices: 4, maxLength: 1500
#337. 1 -- 2. nbSlices: 5, maxLength: 1500
#338. 5 -- 2. nbSlices: 5, maxLength: 1500
#339. 2 -- 1. nbSlices: 6, maxLength: 600
#340. 1 -- 2. nbSlices: 3, maxLength: 3000
#341. 1 -- 2. nbSlices: 3, maxLength: 3000
#342. 3 -- 4. nbSlices: 5, maxLength: 1500
#343. 4 -- 2. nbSlices: 5, maxLength: 1500
#344. 4 -- 2. nbSlices: 6, maxLength: 600
#345. 5 -- 2. nbSlices: 6, maxLength: 600
#346. 4 -- 1. nbSlices: 5, maxLength: 1500
#347. 1 -- 2. nbSlices: 3, maxLength: 3000
#348. 4 -- 5. nbSlices: 3, maxLength: 3000
#349. 3 -- 4. nbSlices: 3, maxLength: 3000
#350. 5 -- 4. nbSlices: 5, maxLength: 1500
#351. 3 -- 2. nbSlices: 4, maxLength: 1500
#352. 3 -- 5. nbSlices: 3, maxLength: 3000
#353. 3 -- 2. nbSlices: 6, maxLength: 600
#354. 3 -- 5. nbSlices: 3, maxLength: 3000
#355. 4 -- 2. nbSlices: 6, maxLength: 600
#356. 5 -- 4. nbSlices: 6, maxLength: 600
#357. 4 -- 3. nbSlices: 5, maxLength: 1500
#358. 2 -- 4. nbSlices: 6, maxLength: 600
#359. 3 -- 4. nbSlices: 5, maxLength: 1500
#360. 5 -- 2. nbSlices: 3, maxLength: 3000
#361. 1 -- 2. nbSlices: 5, maxLength: 1500
#362. 2 -- 4. nbSlices: 6, maxLength: 600
#363. 2 -- 5. nbSlices: 3, maxLength: 3000
#364. 2 -- 5. nbSlices: 5, maxLength: 1500
#365. 2 -- 3. nbSlices: 6, maxLength: 600
#366. 2 -- 3. nbSlices: 6, maxLength: 600
#367. 3 -- 5. nbSlices: 3, maxLength: 3000
#368. 2 -- 5. nbSlices: 3, maxLength: 3000
#369. 5 -- 1. nbSlices: 5, maxLength: 1500
#370. 5 -- 2. nbSlices: 4, maxLength: 1500
#371. 5 -- 4. nbSlices: 5, maxLength: 1500
#372. 5 -- 4. nbSlices: 5, maxLength: 1500
#373. 2 -- 4. nbSlices: 5, maxLength: 1500
#374. 3 -- 2. nbSlices: 3, maxLength: 3000
#375. 5 -- 2. nbSlices: 4, maxLength: 1500
#376. 4 -- 1. nbSlices: 4, maxLength: 1500
#377. 2 -- 5. nbSlices: 3, maxLength: 3000
#378. 5 -- 1. nbSlices: 3, maxLength: 3000
#379. 1 -- 2. nbSlices: 3, maxLength: 3000
#380. 1 -- 2. nbSlices: 6, maxLength: 600
#381. 4 -- 3. nbSlices: 5, maxLength: 1500
#382. 2 -- 3. nbSlices: 5, maxLength: 1500
#383. 3 -- 2. nbSlices: 4, maxLength: 1500
#384. 4 -- 1. nbSlices: 5, maxLength: 1500
#385. 4 -- 2. nbSlices: 4, maxLength: 1500
#386. 2 -- 4. nbSlices: 3, maxLength: 3000
#387. 4 -- 3. nbSlices: 5, maxLength: 1500
#388. 5 -- 1. nbSlices: 6, maxLength: 600
#389. 5 -- 1. nbSlices: 4, maxLength: 1500
#390. 3 -- 1. nbSlices: 3, maxLength: 3000
#391. 2 -- 3. nbSlices: 6, maxLength: 600
#392. 1 -- 2. nbSlices: 4, maxLength: 1500
#393. 1 -- 2. nbSlices: 4, maxLength: 1500
#394. 1 -- 2. nbSlices: 6, maxLength: 600
#395. 5 -- 3. nbSlices: 4, maxLength: 1500
#396. 5 -- 4. nbSlices: 5, maxLength: 1500
#397. 2 -- 4. nbSlices: 5, maxLength: 1500
#398. 3 -- 2. nbSlices: 6, maxLength: 600
#399. 1 -- 2. nbSlices: 5, maxLength: 1500
#400. 4 -- 5. nbSlices: 5, maxLength: 1500
#401. 2 -- 1. nbSlices: 3, maxLength: 3000
#402. 2 -- 5. nbSlices: 5, maxLength: 1500
#403. 3 -- 5. nbSlices: 5, maxLength: 1500
#404. 1 -- 2. nbSlices: 5, maxLength: 1500
#405. 1 -- 2. nbSlices: 4, maxLength: 1500
#406. 2 -- 4. nbSlices: 5, maxLength: 1500
#407. 1 -- 2. nbSlices: 4, maxLength: 1500
#408. 3 -- 4. nbSlices: 4, maxLength: 1500
#409. 3 -- 2. nbSlices: 5, maxLength: 1500
#410. 2 -- 4. nbSlices: 4, maxLength: 1500
#411. 3 -- 4. nbSlices: 6, maxLength: 600
#412. 2 -- 3. nbSlices: 6, maxLength: 600
#413. 5 -- 2. nbSlices: 5, maxLength: 1500
#414. 4 -- 3. nbSlices: 3, maxLength: 3000
#415. 1 -- 2. nbSlices: 4, maxLength: 1500
#416. 5 -- 1. nbSlices: 4, maxLength: 1500
#417. 2 -- 1. nbSlices: 6, maxLength: 600
#418. 4 -- 1. nbSlices: 5, maxLength: 1500
#419. 1 -- 2. nbSlices: 5, maxLength: 1500
#420. 3 -- 1. nbSlices: 4, maxLength: 1500
#421. 2 -- 1. nbSlices: 4, maxLength: 1500
#422. 2 -- 3. nbSlices: 5, maxLength: 1500
#423. 5 -- 2. nbSlices: 3, maxLength: 3000
#424. 2 -- 1. nbSlices: 3, maxLength: 3000
#425. 3 -- 2. nbSlices: 4, maxLength: 1500
#426. 5 -- 1. nbSlices: 3, maxLength: 3000
#427. 1 -- 2. nbSlices: 5, maxLength: 1500
#428. 2 -- 1. nbSlices: 5, maxLength: 1500
#429. 1 -- 2. nbSlices: 5, maxLength: 1500
#430. 4 -- 2. nbSlices: 3, maxLength: 3000
#431. 1 -- 2. nbSlices: 6, maxLength: 600
#432. 2 -- 3. nbSlices: 5, maxLength: 1500
#433. 4 -- 1. nbSlices: 4, maxLength: 1500
#434. 1 -- 2. nbSlices: 3, maxLength: 3000
#435. 5 -- 1. nbSlices: 6, maxLength: 600
#436. 3 -- 4. nbSlices: 4, maxLength: 1500
#437. 3 -- 4. nbSlices: 3, maxLength: 3000
#438. 5 -- 2. nbSlices: 5, maxLength: 1500
#439. 1 -- 2. nbSlices: 3, maxLength: 3000
#440. 2 -- 5. nbSlices: 4, maxLength: 1500
#441. 3 -- 1. nbSlices: 6, maxLength: 600
#442. 4 -- 2. nbSlices: 5, maxLength: 1500
#443. 5 -- 1. nbSlices: 6, maxLength: 600
#444. 3 -- 5. nbSlices: 5, maxLength: 1500
#445. 1 -- 2. nbSlices: 4, maxLength: 1500
#446. 3 -- 1. nbSlices: 3, maxLength: 3000
#447. 3 -- 4. nbSlices: 5, maxLength: 1500
#448. 4 -- 1. nbSlices: 3, maxLength: 3000
#449. 4 -- 3. nbSlices: 5, maxLength: 1500
#450. 3 -- 5. nbSlices: 3, maxLength: 3000
#451. 1 -- 2. nbSlices: 4, maxLength: 1500
#452. 4 -- 2. nbSlices: 4, maxLength: 1500
#453. 2 -- 3. nbSlices: 6, maxLength: 600
#454. 3 -- 5. nbSlices: 5, maxLength: 1500
#455. 4 -- 2. nbSlices: 3, maxLength: 3000
#456. 1 -- 2. nbSlices: 4, maxLength: 1500
#457. 4 -- 3. nbSlices: 3, maxLength: 3000
#458. 1 -- 2. nbSlices: 6, maxLength: 600
#459. 1 -- 2. nbSlices: 4, maxLength: 1500
#460. 5 -- 2. nbSlices: 5, maxLength: 1500
#461. 4 -- 2. nbSlices: 6, maxLength: 600
#462. 4 -- 3. nbSlices: 5, maxLength: 1500
#463. 5 -- 3. nbSlices: 5, maxLength: 1500
#464. 1 -- 2. nbSlices: 4, maxLength: 1500
#465. 3 -- 2. nbSlices: 6, maxLength: 600
#466. 5 -- 4. nbSlices: 3, maxLength: 3000
#467. 3 -- 5. nbSlices: 3, maxLength: 3000
#468. 5 -- 1. nbSlices: 4, maxLength: 1500
#469. 3 -- 4. nbSlices: 5, maxLength: 1500
#470. 4 -- 2. nbSlices: 6, maxLength: 600
#471. 3 -- 1. nbSlices: 3, maxLength: 3000
#472. 5 -- 2. nbSlices: 6, maxLength: 600
#473. 2 -- 1. nbSlices: 6, maxLength: 600
#474. 4 -- 2. nbSlices: 4, maxLength: 1500
#475. 5 -- 3. nbSlices: 6, maxLength: 600
#476. 1 -- 2. nbSlices: 6, maxLength: 600
#477. 5 -- 4. nbSlices: 4, maxLength: 1500
#478. 1 -- 2. nbSlices: 4, maxLength: 1500
#479. 5 -- 3. nbSlices: 4, maxLength: 1500
#480. 1 -- 2. nbSlices: 4, maxLength: 1500
#481. 5 -- 1. nbSlices: 6, maxLength: 600
#482. 2 -- 1. nbSlices: 4, maxLength: 1500
#483. 4 -- 2. nbSlices: 5, maxLength: 1500
#484. 4 -- 2. nbSlices: 4, maxLength: 1500
#485. 5 -- 2. nbSlices: 4, maxLength: 1500
#486. 5 -- 1. nbSlices: 3, maxLength: 3000
#487. 4 -- 2. nbSlices: 3, maxLength: 3000
#488. 3 -- 1. nbSlices: 5, maxLength: 1500
#489. 1 -- 2. nbSlices: 4, maxLength: 1500
#490. 2 -- 1. nbSlices: 4, maxLength: 1500
#491. 1 -- 2. nbSlices: 4, maxLength: 1500
#492. 2 -- 1. nbSlices: 5, maxLength: 1500
#493. 5 -- 4. nbSlices: 6, maxLength: 600
#494. 3 -- 2. nbSlices: 3, maxLength: 3000
#495. 1 -- 2. nbSlices: 3, maxLength: 3000
#496. 3 -- 4. nbSlices: 3, maxLength: 3000
#497. 1 -- 2. nbSlices: 4, maxLength: 1500
#498. 3 -- 2. nbSlices: 4, maxLength: 1500
#499. 2 -- 1. nbSlices: 6, maxLength: 600
#500. 2 -- 1. nbSlices: 6, maxLength: 600
#501. 4 -- 1. nbSlices: 4, maxLength: 1500
#502. 2 -- 4. nbSlices: 3, maxLength: 3000
#503. 1 -- 2. nbSlices: 3, maxLength: 3000
#504. 4 -- 5. nbSlices: 6, maxLength: 600
#505. 5 -- 1. nbSlices: 5, maxLength: 1500
#506. 4 -- 1. nbSlices: 5, maxLength: 1500
#507. 5 -- 4. nbSlices: 4, maxLength: 1500
#508. 5 -- 1. nbSlices: 5, maxLength: 1500
#509. 4 -- 2. nbSlices: 3, maxLength: 3000
#510. 5 -- 2. nbSlices: 3, maxLength: 3000
#511. 3 -- 1. nbSlices: 5, maxLength: 1500
#512. 5 -- 4. nbSlices: 6, maxLength: 600
#513. 1 -- 2. nbSlices: 4, maxLength: 1500
#514. 3 -- 1. nbSlices: 6, maxLength: 600
#515. 3 -- 4. nbSlices: 5, maxLength: 1500
#516. 1 -- 2. nbSlices: 5, maxLength: 1500
#517. 5 -- 2. nbSlices: 5, maxLength: 1500
#518. 2 -- 3. nbSlices: 4, maxLength: 1500
#519. 4 -- 3. nbSlices: 3, maxLength: 3000
#520. 3 -- 4. nbSlices: 6, maxLength: 600
#521. 5 -- 3. nbSlices: 5, maxLength: 1500
#522. 4 -- 5. nbSlices: 6, maxLength: 600
#523. 1 -- 2. nbSlices: 4, maxLength: 1500
#524. 2 -- 3. nbSlices: 4, maxLength: 1500
#525. 3 -- 1. nbSlices: 5, maxLength: 1500
#526. 1 -- 2. nbSlices: 4, maxLength: 1500
#527. 2 -- 4. nbSlices: 5, maxLength: 1500
#528. 3 -- 2. nbSlices: 3, maxLength: 3000
#529. 4 -- 3. nbSlices: 4, maxLength: 1500
#530. 5 -- 4. nbSlices: 3, maxLength: 3000
#531. 5 -- 3. nbSlices: 5, maxLength: 1500
#532. 1 -- 2. nbSlices: 3, maxLength: 3000
#533. 2 -- 1. nbSlices: 3, maxLength: 3000
#534. 3 -- 5. nbSlices: 3, maxLength: 3000
#535. 1 -- 2. nbSlices: 3, maxLength: 3000
#536. 2 -- 1. nbSlices: 6, maxLength: 600
#537. 5 -- 2. nbSlices: 6, maxLength: 600
#538. 3 -- 2. nbSlices: 3, maxLength: 3000
#539. 2 -- 5. nbSlices: 5, maxLength: 1500
#540. 3 -- 5. nbSlices: 3, maxLength: 3000
#541. 2 -- 5. nbSlices: 4, maxLength: 1500
#542. 5 -- 1. nbSlices: 5, maxLength: 1500
#543. 1 -- 2. nbSlices: 3, maxLength: 3000
#544. 4 -- 1. nbSlices: 6, maxLength: 600
#545. 3 -- 2. nbSlices: 6, maxLength: 600
#546. 1 -- 2. nbSlices: 4, maxLength: 1500
#547. 2 -- 1. nbSlices: 6, maxLength: 600
#548. 2 -- 5. nbSlices: 4, maxLength: 1500
#549. 2 -- 4. nbSlices: 6, maxLength: 600
#550. 2 -- 5. nbSlices: 3, maxLength: 3000
#551. 1 -- 2. nbSlices: 4, maxLength: 1500
#552. 3 -- 2. nbSlices: 4, maxLength: 1500
#553. 1 -- 2. nbSlices: 5, maxLength: 1500
#554. 5 -- 4. nbSlices: 6, maxLength: 600
#555. 4 -- 2. nbSlices: 3, maxLength: 3000
#556. 3 -- 2. nbSlices: 6, maxLength: 600
#557. 1 -- 2. nbSlices: 5, maxLength: 1500
#558. 1 -- 2. nbSlices: 5, maxLength: 1500
#559. 5 -- 3. nbSlices: 3, maxLength: 3000
#560. 2 -- 5. nbSlices: 4, maxLength: 1500
#561. 5 -- 3. nbSlices: 4, maxLength: 1500
#562. 4 -- 3. nbSlices: 5, maxLength: 1500
#563. 3 -- 5. nbSlices: 4, maxLength: 1500
#564. 4 -- 1. nbSlices: 6, maxLength: 600
#565. 4 -- 1. nbSlices: 4, maxLength: 1500
#566. 5 -- 1. nbSlices: 5, maxLength: 1500
#567. 4 -- 3. nbSlices: 5, maxLength: 1500
#568. 5 -- 4. nbSlices: 4, maxLength: 1500
#569. 3 -- 2. nbSlices: 6, maxLength: 600
#570. 1 -- 2. nbSlices: 5, maxLength: 1500
#571. 1 -- 2. nbSlices: 6, maxLength: 600
#572. 2 -- 4. nbSlices: 5, maxLength: 1500
#573. 2 -- 5. nbSlices: 5, maxLength: 1500
#574. 5 -- 4. nbSlices: 3, maxLength: 3000
#575. 4 -- 5. nbSlices: 3, maxLength: 3000
#576. 3 -- 4. nbSlices: 5, maxLength: 1500
#577. 2 -- 5. nbSlices: 3, maxLength: 3000
#578. 5 -- 4. nbSlices: 3, maxLength: 3000
#579. 5 -- 4. nbSlices: 3, maxLength: 3000
#580. 4 -- 5. nbSlices: 3, maxLength: 3000
#581. 5 -- 1. nbSlices: 3, maxLength: 3000
#582. 5 -- 3. nbSlices: 4, maxLength: 1500
#583. 4 -- 1. nbSlices: 4, maxLength: 1500
#584. 2 -- 3. nbSlices: 5, maxLength: 1500
#585. 1 -- 2. nbSlices: 4, maxLength: 1500
#586. 5 -- 3. nbSlices: 6, maxLength: 600
#587. 4 -- 2. nbSlices: 4, maxLength: 1500
#588. 4 -- 5. nbSlices: 6, maxLength: 600
#589. 1 -- 2. nbSlices: 6, maxLength: 600
#590. 1 -- 2. nbSlices: 5, maxLength: 1500
#591. 4 -- 3. nbSlices: 4, maxLength: 1500
#592. 2 -- 4. nbSlices: 4, maxLength: 1500
#593. 1 -- 2. nbSlices: 4, maxLength: 1500
#594. 3 -- 4. nbSlices: 3, maxLength: 3000
#595. 3 -- 2. nbSlices: 6, maxLength: 600
#596. 4 -- 1. nbSlices: 3, maxLength: 3000
#597. 2 -- 3. nbSlices: 4, maxLength: 1500
#598. 3 -- 1. nbSlices: 3, maxLength: 3000
#599. 5 -- 4. nbSlices: 5, maxLength: 1500
#600. 1 -- 2. nbSlices: 3, maxLength: 3000
#601. 4 -- 1. nbSlices: 6, maxLength: 600
#602. 3 -- 5. nbSlices: 5, maxLength: 1500
#603. 3 -- 2. nbSlices: 5, maxLength: 1500
#604. 4 -- 2. nbSlices: 4, maxLength: 1500
#605. 2 -- 5. nbSlices: 4, maxLength: 1500
#606. 1 -- 2. nbSlices: 5, maxLength: 1500
#607. 2 -- 5. nbSlices: 3, maxLength: 3000
#608. 4 -- 3. nbSlices: 5, maxLength: 1500
#609. 5 -- 4. nbSlices: 6, maxLength: 600
#610. 2 -- 5. nbSlices: 6, maxLength: 600
#611. 3 -- 4. nbSlices: 6, maxLength: 600
#612. 2 -- 3. nbSlices: 4, maxLength: 1500
#613. 3 -- 1. nbSlices: 4, maxLength: 1500
#614. 3 -- 2. nbSlices: 3, maxLength: 3000
#615. 3 -- 5. nbSlices: 3, maxLength: 3000
#616. 5 -- 3. nbSlices: 4, maxLength: 1500
#617. 5 -- 3. nbSlices: 6, maxLength: 600
#618. 5 -- 1. nbSlices: 4, maxLength: 1500
#619. 3 -- 1. nbSlices: 4, maxLength: 1500
#620. 5 -- 4. nbSlices: 4, maxLength: 1500
#621. 4 -- 1. nbSlices: 6, maxLength: 600
#622. 1 -- 2. nbSlices: 3, maxLength: 3000
#623. 1 -- 2. nbSlices: 5, maxLength: 1500
#624. 5 -- 3. nbSlices: 6, maxLength: 600
#625. 1 -- 2. nbSlices: 3, maxLength: 3000
#626. 4 -- 3. nbSlices: 6, maxLength: 600
#627. 4 -- 3. nbSlices: 4, maxLength: 1500
#628. 5 -- 4. nbSlices: 5, maxLength: 1500
#629. 4 -- 3. nbSlices: 3, maxLength: 3000
#630. 4 -- 3. nbSlices: 5, maxLength: 1500
#631. 2 -- 4. nbSlices: 5, maxLength: 1500
#632. 3 -- 1. nbSlices: 5, maxLength: 1500
#633. 3 -- 5. nbSlices: 4, maxLength: 1500
#634. 3 -- 5. nbSlices: 3, maxLength: 3000
#635. 5 -- 1. nbSlices: 5, maxLength: 1500
#636. 3 -- 5. nbSlices: 4, maxLength: 1500
#637. 2 -- 5. nbSlices: 6, maxLength: 600
#638. 5 -- 3. nbSlices: 5, maxLength: 1500
#639. 2 -- 5. nbSlices: 6, maxLength: 600
#640. 3 -- 1. nbSlices: 3, maxLength: 3000
#641. 4 -- 1. nbSlices: 6, maxLength: 600
#642. 1 -- 2. nbSlices: 5, maxLength: 1500
#643. 2 -- 3. nbSlices: 5, maxLength: 1500
#644. 3 -- 5. nbSlices: 6, maxLength: 600
#645. 2 -- 3. nbSlices: 3, maxLength: 3000
#646. 4 -- 5. nbSlices: 5, maxLength: 1500
#647. 1 -- 2. nbSlices: 6, maxLength: 600
#648. 1 -- 2. nbSlices: 3, maxLength: 3000
#649. 3 -- 4. nbSlices: 3, maxLength: 3000
#650. 5 -- 4. nbSlices: 3, maxLength: 3000
#651. 4 -- 1. nbSlices: 4, maxLength: 1500
#652. 3 -- 2. nbSlices: 6, maxLength: 600
#653. 5 -- 2. nbSlices: 6, maxLength: 600
#654. 1 -- 2. nbSlices: 4, maxLength: 1500
#655. 4 -- 2. nbSlices: 4, maxLength: 1500
#656. 4 -- 5. nbSlices: 3, maxLength: 3000
#657. 1 -- 2. nbSlices: 4, maxLength: 1500
#658. 3 -- 1. nbSlices: 5, maxLength: 1500
#659. 3 -- 5. nbSlices: 6, maxLength: 600
#660. 5 -- 4. nbSlices: 5, maxLength: 1500
#661. 3 -- 2. nbSlices: 6, maxLength: 600
#662. 1 -- 2. nbSlices: 3, maxLength: 3000
#663. 3 -- 4. nbSlices: 5, maxLength: 1500
#664. 3 -- 2. nbSlices: 3, maxLength: 3000
#665. 5 -- 1. nbSlices: 5, maxLength: 1500
#666. 5 -- 1. nbSlices: 5, maxLength: 1500
#667. 2 -- 5. nbSlices: 6, maxLength: 600
#668. 1 -- 2. nbSlices: 3, maxLength: 3000
#669. 5 -- 2. nbSlices: 4, maxLength: 1500
#670. 1 -- 2. nbSlices: 3, maxLength: 3000
#671. 2 -- 4. nbSlices: 6, maxLength: 600
#672. 3 -- 1. nbSlices: 6, maxLength: 600
#673. 5 -- 2. nbSlices: 4, maxLength: 1500
#674. 5 -- 4. nbSlices: 6, maxLength: 600
#675. 5 -- 2. nbSlices: 4, maxLength: 1500
#676. 3 -- 5. nbSlices: 5, maxLength: 1500
#677. 5 -- 4. nbSlices: 5, maxLength: 1500
#678. 3 -- 5. nbSlices: 6, maxLength: 600
#679. 3 -- 5. nbSlices: 4, maxLength: 1500
#680. 3 -- 4. nbSlices: 5, maxLength: 1500
#681. 2 -- 5. nbSlices: 5, maxLength: 1500
#682. 3 -- 2. nbSlices: 3, maxLength: 3000
#683. 1 -- 2. nbSlices: 3, maxLength: 3000
#684. 2 -- 1. nbSlices: 5, maxLength: 1500
#685. 3 -- 5. nbSlices: 6, maxLength: 600
#686. 2 -- 4. nbSlices: 5, maxLength: 1500
#687. 4 -- 2. nbSlices: 3, maxLength: 3000
#688. 4 -- 1. nbSlices: 5, maxLength: 1500
#689. 3 -- 5. nbSlices: 4, maxLength: 1500
#690. 5 -- 1. nbSlices: 3, maxLength: 3000
#691. 1 -- 2. nbSlices: 6, maxLength: 600
#692. 4 -- 5. nbSlices: 4, maxLength: 1500
#693. 2 -- 4. nbSlices: 5, maxLength: 1500
#694. 4 -- 5. nbSlices: 5, maxLength: 1500
#695. 1 -- 2. nbSlices: 3, maxLength: 3000
#696. 1 -- 2. nbSlices: 6, maxLength: 600
#697. 2 -- 3. nbSlices: 4, maxLength: 1500
#698. 1 -- 2. nbSlices: 6, maxLength: 600
#699. 4 -- 2. nbSlices: 3, maxLength: 3000
#700. 2 -- 5. nbSlices: 4, maxLength: 1500
#701. 4 -- 5. nbSlices: 3, maxLength: 3000
#702. 2 -- 1. nbSlices: 5, maxLength: 1500
#703. 4 -- 5. nbSlices: 6, maxLength: 600
#704. 2 -- 3. nbSlices: 5, maxLength: 1500
#705. 3 -- 5. nbSlices: 3, maxLength: 3000
#706. 4 -- 3. nbSlices: 4, maxLength: 1500
#707. 4 -- 3. nbSlices: 6, maxLength: 600
#708. 5 -- 1. nbSlices: 4, maxLength: 1500
#709. 5 -- 4. nbSlices: 6, maxLength: 600
#710. 1 -- 2. nbSlices: 3, maxLength: 3000
#711. 4 -- 2. nbSlices: 6, maxLength: 600
#712. 3 -- 5. nbSlices: 4, maxLength: 1500
#713. 5 -- 3. nbSlices: 5, maxLength: 1500
#714. 2 -- 3. nbSlices: 5, maxLength: 1500
#715. 2 -- 3. nbSlices: 5, maxLength: 1500
#716. 4 -- 5. nbSlices: 6, maxLength: 600
#717. 4 -- 2. nbSlices: 6, maxLength: 600
#718. 1 -- 2. nbSlices: 5, maxLength: 1500
#719. 2 -- 3. nbSlices: 5, maxLength: 1500
#720. 2 -- 3. nbSlices: 5, maxLength: 1500
#721. 2 -- 3. nbSlices: 6, maxLength: 600
#722. 4 -- 2. nbSlices: 3, maxLength: 3000
#723. 2 -- 3. nbSlices: 5, maxLength: 1500
#724. 5 -- 3. nbSlices: 6, maxLength: 600
#725. 5 -- 1. nbSlices: 6, maxLength: 600
#726. 5 -- 2. nbSlices: 4, maxLength: 1500
#727. 3 -- 1. nbSlices: 6, maxLength: 600
#728. 5 -- 3. nbSlices: 6, maxLength: 600
#729. 3 -- 1. nbSlices: 5, maxLength: 1500
#730. 4 -- 5. nbSlices: 6, maxLength: 600
#731. 4 -- 5. nbSlices: 6, maxLength: 600
#732. 4 -- 3. nbSlices: 3, maxLength: 3000
#733. 5 -- 2. nbSlices: 3, maxLength: 3000
#734. 4 -- 5. nbSlices: 4, maxLength: 1500
#735. 2 -- 3. nbSlices: 4, maxLength: 1500
#736. 2 -- 4. nbSlices: 6, maxLength: 600
#737. 1 -- 2. nbSlices: 5, maxLength: 1500
#738. 1 -- 2. nbSlices: 4, maxLength: 1500
#739. 3 -- 5. nbSlices: 3, maxLength: 3000
#740. 1 -- 2. nbSlices: 4, maxLength: 1500
#741. 1 -- 2. nbSlices: 4, maxLength: 1500
#742. 4 -- 3. nbSlices: 5, maxLength: 1500
#743. 2 -- 3. nbSlices: 4, maxLength: 1500
#744. 1 -- 2. nbSlices: 3, maxLength: 3000
#745. 3 -- 2. nbSlices: 4, maxLength: 1500
#746. 2 -- 1. nbSlices: 3, maxLength: 3000
#747. 3 -- 5. nbSlices: 3, maxLength: 3000
#748. 5 -- 1. nbSlices: 4, maxLength: 1500
#749. 2 -- 1. nbSlices: 3, maxLength: 3000
#750. 3 -- 1. nbSlices: 4, maxLength: 1500
#751. 2 -- 4. nbSlices: 5, maxLength: 1500
#752. 5 -- 2. nbSlices: 4, maxLength: 1500
#753. 5 -- 1. nbSlices: 5, maxLength: 1500
#754. 2 -- 4. nbSlices: 3, maxLength: 3000
#755. 2 -- 5. nbSlices: 3, maxLength: 3000
#756. 1 -- 2. nbSlices: 4, maxLength: 1500
#757. 1 -- 2. nbSlices: 4, maxLength: 1500
#758. 3 -- 5. nbSlices: 3, maxLength: 3000
#759. 2 -- 3. nbSlices: 3, maxLength: 3000
#760. 3 -- 4. nbSlices: 6, maxLength: 600
#761. 4 -- 5. nbSlices: 4, maxLength: 1500
#762. 1 -- 2. nbSlices: 6, maxLength: 600
#763. 2 -- 1. nbSlices: 3, maxLength: 3000
#764. 1 -- 2. nbSlices: 6, maxLength: 600
#765. 4 -- 2. nbSlices: 6, maxLength: 600
#766. 3 -- 2. nbSlices: 3, maxLength: 3000
#767. 1 -- 2. nbSlices: 5, maxLength: 1500
#768. 2 -- 1. nbSlices: 3, maxLength: 3000
#769. 1 -- 2. nbSlices: 5, maxLength: 1500
#770. 2 -- 4. nbSlices: 5, maxLength: 1500
#771. 1 -- 2. nbSlices: 5, maxLength: 1500
#772. 3 -- 2. nbSlices: 4, maxLength: 1500
#773. 2 -- 1. nbSlices: 3, maxLength: 3000
#774. 4 -- 3. nbSlices: 4, maxLength: 1500
#775. 1 -- 2. nbSlices: 3, maxLength: 3000
#776. 2 -- 1. nbSlices: 5, maxLength: 1500
#777. 5 -- 4. nbSlices: 6, maxLength: 600
#778. 4 -- 1. nbSlices: 4, maxLength: 1500
#779. 5 -- 4. nbSlices: 5, maxLength: 1500
#780. 4 -- 1. nbSlices: 4, maxLength: 1500
#781. 5 -- 2. nbSlices: 4, maxLength: 1500
#782. 2 -- 4. nbSlices: 3, maxLength: 3000
#783. 3 -- 5. nbSlices: 6, maxLength: 600
#784. 5 -- 3. nbSlices: 4, maxLength: 1500
#785. 5 -- 2. nbSlices: 4, maxLength: 1500
#786. 5 -- 3. nbSlices: 3, maxLength: 3000
#787. 5 -- 1. nbSlices: 4, maxLength: 1500
#788. 5 -- 2. nbSlices: 3, maxLength: 3000
#789. 3 -- 5. nbSlices: 4, maxLength: 1500
#790. 5 -- 1. nbSlices: 6, maxLength: 600
#791. 3 -- 4. nbSlices: 6, maxLength: 600
#792. 5 -- 1. nbSlices: 5, maxLength: 1500
#793. 3 -- 5. nbSlices: 6, maxLength: 600
#794. 5 -- 4. nbSlices: 4, maxLength: 1500
#795. 5 -- 4. nbSlices: 6, maxLength: 600
#796. 2 -- 4. nbSlices: 5, maxLength: 1500
#797. 1 -- 2. nbSlices: 4, maxLength: 1500
#798. 3 -- 5. nbSlices: 5, maxLength: 1500
#799. 5 -- 4. nbSlices: 6, maxLength: 600
#800. 5 -- 2. nbSlices: 3, maxLength: 3000
#801. 5 -- 3. nbSlices: 6, maxLength: 600
#802. 4 -- 3. nbSlices: 5, maxLength: 1500
#803. 5 -- 2. nbSlices: 6, maxLength: 600
#804. 5 -- 3. nbSlices: 6, maxLength: 600
#805. 4 -- 1. nbSlices: 5, maxLength: 1500
#806. 4 -- 1. nbSlices: 4, maxLength: 1500
#807. 4 -- 5. nbSlices: 6, maxLength: 600
#808. 4 -- 1. nbSlices: 3, maxLength: 3000
#809. 2 -- 3. nbSlices: 6, maxLength: 600
#810. 2 -- 4. nbSlices: 3, maxLength: 3000
#811. 1 -- 2. nbSlices: 5, maxLength: 1500
#812. 2 -- 4. nbSlices: 6, maxLength: 600
#813. 1 -- 2. nbSlices: 4, maxLength: 1500
#814. 1 -- 2. nbSlices: 6, maxLength: 600
#815. 4 -- 1. nbSlices: 4, maxLength: 1500
#816. 2 -- 4. nbSlices: 3, maxLength: 3000
#817. 3 -- 5. nbSlices: 6, maxLength: 600
#818. 5 -- 2. nbSlices: 4, maxLength: 1500
#819. 5 -- 2. nbSlices: 4, maxLength: 1500
#820. 4 -- 3. nbSlices: 5, maxLength: 1500
#821. 2 -- 1. nbSlices: 5, maxLength: 1500
#822. 4 -- 2. nbSlices: 4, maxLength: 1500
#823. 5 -- 4. nbSlices: 4, maxLength: 1500
#824. 3 -- 4. nbSlices: 3, maxLength: 3000
#825. 2 -- 1. nbSlices: 6, maxLength: 600
#826. 5 -- 1. nbSlices: 5, maxLength: 1500
#827. 5 -- 1. nbSlices: 4, maxLength: 1500
#828. 5 -- 1. nbSlices: 5, maxLength: 1500
#829. 3 -- 2. nbSlices: 5, maxLength: 1500
#830. 3 -- 1. nbSlices: 6, maxLength: 600
#831. 1 -- 2. nbSlices: 6, maxLength: 600
#832. 1 -- 2. nbSlices: 3, maxLength: 3000
#833. 3 -- 2. nbSlices: 5, maxLength: 1500
#834. 4 -- 3. nbSlices: 6, maxLength: 600
#835. 5 -- 1. nbSlices: 5, maxLength: 1500
#836. 3 -- 1. nbSlices: 6, maxLength: 600
#837. 5 -- 1. nbSlices: 3, maxLength: 3000
#838. 4 -- 1. nbSlices: 6, maxLength: 600
#839. 1 -- 2. nbSlices: 4, maxLength: 1500
#840. 1 -- 2. nbSlices: 5, maxLength: 1500
#841. 1 -- 2. nbSlices: 6, maxLength: 600
#842. 5 -- 3. nbSlices: 3, maxLength: 3000
#843. 4 -- 5. nbSlices: 6, maxLength: 600
#844. 1 -- 2. nbSlices: 6, maxLength: 600
#845. 4 -- 1. nbSlices: 5, maxLength: 1500
#846. 5 -- 3. nbSlices: 6, maxLength: 600
#847. 5 -- 2. nbSlices: 3, maxLength: 3000
#848. 4 -- 3. nbSlices: 3, maxLength: 3000
#849. 5 -- 2. nbSlices: 5, maxLength: 1500
#850. 3 -- 5. nbSlices: 4, maxLength: 1500
#851. 3 -- 2. nbSlices: 3, maxLength: 3000
#852. 2 -- 1. nbSlices: 5, maxLength: 1500
#853. 1 -- 2. nbSlices: 3, maxLength: 3000
#854. 4 -- 3. nbSlices: 5, maxLength: 1500
#855. 3 -- 1. nbSlices: 4, maxLength: 1500
#856. 3 -- 2. nbSlices: 3, maxLength: 3000
#857. 5 -- 2. nbSlices: 4, maxLength: 1500
#858. 5 -- 3. nbSlices: 5, maxLength: 1500
#859. 1 -- 2. nbSlices: 5, maxLength: 1500
#860. 4 -- 2. nbSlices: 6, maxLength: 600
#861. 4 -- 2. nbSlices: 4, maxLength: 1500
#862. 1 -- 2. nbSlices: 3, maxLength: 3000
#863. 2 -- 5. nbSlices: 6, maxLength: 600
#864. 2 -- 3. nbSlices: 6, maxLength: 600
#865. 4 -- 1. nbSlices: 3, maxLength: 3000
#866. 1 -- 2. nbSlices: 3, maxLength: 3000
#867. 5 -- 3. nbSlices: 5, maxLength: 1500
#868. 5 -- 1. nbSlices: 5, maxLength: 1500
#869. 1 -- 2. nbSlices: 3, maxLength: 3000
#870. 4 -- 3. nbSlices: 5, maxLength: 1500
#871. 4 -- 3. nbSlices: 5, maxLength: 1500
#872. 5 -- 2. nbSlices: 4, maxLength: 1500
#873. 4 -- 2. nbSlices: 5, maxLength: 1500
#874. 1 -- 2. nbSlices: 5, maxLength: 1500
#875. 4 -- 1. nbSlices: 6, maxLength: 600
#876. 2 -- 5. nbSlices: 5, maxLength: 1500
#877. 4 -- 3. nbSlices: 6, maxLength: 600
#878. 3 -- 5. nbSlices: 4, maxLength: 1500
#879. 2 -- 1. nbSlices: 3, maxLength: 3000
#880. 1 -- 2. nbSlices: 6, maxLength: 600
#881. 2 -- 4. nbSlices: 6, maxLength: 600
#882. 3 -- 4. nbSlices: 4, maxLength: 1500
#883. 5 -- 2. nbSlices: 4, maxLength: 1500
#884. 1 -- 2. nbSlices: 3, maxLength: 3000
#885. 5 -- 1. nbSlices: 4, maxLength: 1500
#886. 1 -- 2. nbSlices: 6, maxLength: 600
#887. 1 -- 2. nbSlices: 4, maxLength: 1500
#888. 3 -- 4. nbSlices: 4, maxLength: 1500
#889. 4 -- 3. nbSlices: 6, maxLength: 600
#890. 3 -- 4. nbSlices: 5, maxLength: 1500
#891. 1 -- 2. nbSlices: 6, maxLength: 600
#892. 5 -- 4. nbSlices: 5, maxLength: 1500
#893. 5 -- 4. nbSlices: 5, maxLength: 1500
#894. 5 -- 2. nbSlices: 6, maxLength: 600
#895. 3 -- 2. nbSlices: 5, maxLength: 1500
#896. 4 -- 3. nbSlices: 6, maxLength: 600
#897. 4 -- 2. nbSlices: 3, maxLength: 3000
#898. 2 -- 4. nbSlices: 4, maxLength: 1500
#899. 4 -- 5. nbSlices: 6, maxLength: 600
#900. 2 -- 5. nbSlices: 3, maxLength: 3000
#901. 5 -- 2. nbSlices: 6, maxLength: 600
#902. 2 -- 3. nbSlices: 4, maxLength: 1500
#903. 1 -- 2. nbSlices: 3, maxLength: 3000
#904. 2 -- 4. nbSlices: 3, maxLength: 3000
#905. 4 -- 2. nbSlices: 3, maxLength: 3000
#906. 3 -- 4. nbSlices: 4, maxLength: 1500
#907. 2 -- 3. nbSlices: 4, maxLength: 1500
#908. 5 -- 3. nbSlices: 6, maxLength: 600
#909. 3 -- 1. nbSlices: 6, maxLength: 600
#910. 4 -- 1. nbSlices: 4, maxLength: 1500
#911. 2 -- 1. nbSlices: 3, maxLength: 3000
#912. 2 -- 1. nbSlices: 5, maxLength: 1500
#913. 1 -- 2. nbSlices: 6, maxLength: 600
#914. 3 -- 2. nbSlices: 5, maxLength: 1500
#915. 2 -- 3. nbSlices: 6, maxLength: 600
#916. 4 -- 2. nbSlices: 6, maxLength: 600
#917. 4 -- 3. nbSlices: 3, maxLength: 3000
#918. 1 -- 2. nbSlices: 4, maxLength: 1500
#919. 2 -- 5. nbSlices: 5, maxLength: 1500
#920. 1 -- 2. nbSlices: 5, maxLength: 1500
#921. 3 -- 5. nbSlices: 4, maxLength: 1500
#922. 2 -- 4. nbSlices: 3, maxLength: 3000
#923. 2 -- 3. nbSlices: 3, maxLength: 3000
#924. 1 -- 2. nbSlices: 5, maxLength: 1500
#925. 1 -- 2. nbSlices: 6, maxLength: 600
#926. 3 -- 5. nbSlices: 4, maxLength: 1500
#927. 4 -- 5. nbSlices: 6, maxLength: 600
#928. 3 -- 1. nbSlices: 6, maxLength: 600
#929. 5 -- 4. nbSlices: 3, maxLength: 3000
#930. 2 -- 5. nbSlices: 5, maxLength: 1500
#931. 3 -- 1. nbSlices: 6, maxLength: 600
#932. 2 -- 4. nbSlices: 6, maxLength: 600
#933. 3 -- 2. nbSlices: 3, maxLength: 3000
#934. 2 -- 3. nbSlices: 3, maxLength: 3000
#935. 2 -- 5. nbSlices: 4, maxLength: 1500
#936. 2 -- 5. nbSlices: 4, maxLength: 1500
#937. 4 -- 5. nbSlices: 3, maxLength: 3000
#938. 2 -- 3. nbSlices: 6, maxLength: 600
#939. 5 -- 4. nbSlices: 3, maxLength: 3000
#940. 5 -- 2. nbSlices: 6, maxLength: 600
#941. 5 -- 3. nbSlices: 4, maxLength: 1500
#942. 4 -- 5. nbSlices: 5, maxLength: 1500
#943. 2 -- 1. nbSlices: 6, maxLength: 600
#944. 4 -- 5. nbSlices: 3, maxLength: 3000
#945. 5 -- 2. nbSlices: 6, maxLength: 600
#946. 4 -- 3. nbSlices: 5, maxLength: 1500
#947. 1 -- 2. nbSlices: 4, maxLength: 1500
#948. 1 -- 2. nbSlices: 6, maxLength: 600
#949. 1 -- 2. nbSlices: 4, maxLength: 1500
#950. 5 -- 4. nbSlices: 3, maxLength: 3000
#951. 4 -- 2. nbSlices: 4, maxLength: 1500
#952. 4 -- 1. nbSlices: 6, maxLength: 600
#953. 5 -- 1. nbSlices: 6, maxLength: 600
#954. 3 -- 1. nbSlices: 5, maxLength: 1500
#955. 5 -- 4. nbSlices: 6, maxLength: 600
#956. 1 -- 2. nbSlices: 5, maxLength: 1500
#957. 4 -- 3. nbSlices: 5, maxLength: 1500
#958. 4 -- 5. nbSlices: 5, maxLength: 1500
#959. 4 -- 1. nbSlices: 6, maxLength: 600
#960. 5 -- 2. nbSlices: 4, maxLength: 1500
#961. 3 -- 2. nbSlices: 6, maxLength: 600
#962. 4 -- 3. nbSlices: 5, maxLength: 1500
#963. 2 -- 3. nbSlices: 6, maxLength: 600
#964. 2 -- 4. nbSlices: 3, maxLength: 3000
#965. 2 -- 5. nbSlices: 6, maxLength: 600
#966. 3 -- 1. nbSlices: 3, maxLength: 3000
#967. 2 -- 3. nbSlices: 4, maxLength: 1500
#968. 3 -- 5. nbSlices: 6, maxLength: 600
#969. 2 -- 5. nbSlices: 3, maxLength: 3000
#970. 2 -- 3. nbSlices: 6, maxLength: 600
#971. 4 -- 3. nbSlices: 3, maxLength: 3000
#972. 1 -- 2. nbSlices: 4, maxLength: 1500
#973. 1 -- 2. nbSlices: 4, maxLength: 1500
#974. 3 -- 1. nbSlices: 6, maxLength: 600
#975. 4 -- 5. nbSlices: 3, maxLength: 3000
#976. 2 -- 4. nbSlices: 4, maxLength: 1500
#977. 3 -- 4. nbSlices: 4, maxLength: 1500
#978. 1 -- 2. nbSlices: 6, maxLength: 600
#979. 5 -- 1. nbSlices: 3, maxLength: 3000
#980. 1 -- 2. nbSlices: 6, maxLength: 600
#981. 2 -- 1. nbSlices: 6, maxLength: 600
#982. 2 -- 1. nbSlices: 3, maxLength: 3000
#983. 1 -- 2. nbSlices: 4, maxLength: 1500
#984. 5 -- 3. nbSlices: 3, maxLength: 3000
#985. 1 -- 2. nbSlices: 4, maxLength: 1500
#986. 3 -- 5. nbSlices: 6, maxLength: 600
#987. 2 -- 5. nbSlices: 3, maxLength: 3000
#988. 1 -- 2. nbSlices: 4, maxLength: 1500
#989. 5 -- 3. nbSlices: 4, maxLength: 1500
#990. 4 -- 2. nbSlices: 5, maxLength: 1500
#991. 2 -- 4. nbSlices: 6, maxLength: 600
#992. 2 -- 1. nbSlices: 4, maxLength: 1500
#993. 2 -- 4. nbSlices: 4, maxLength: 1500
#994. 2 -- 1. nbSlices: 5, maxLength: 1500
#995. 5 -- 4. nbSlices: 3, maxLength: 3000
#996. 2 -- 1. nbSlices: 5, maxLength: 1500
#997. 1 -- 2. nbSlices: 4, maxLength: 1500
#998. 5 -- 2. nbSlices: 4, maxLength: 1500
#999. 1 -- 2. nbSlices: 5, maxLength: 1500
#1000. 1 -- 2. nbSlices: 3, maxLength: 3000

1000 demands were generated.
--- ROUTING DEMANDS --- 
#1 (5, 1), requiring 4 slices and having Max length 1500
#2 (1, 2), requiring 5 slices and having Max length 1500
#3 (4, 1), requiring 4 slices and having Max length 1500
#4 (1, 2), requiring 4 slices and having Max length 1500
#5 (3, 1), requiring 4 slices and having Max length 1500
#6 (3, 5), requiring 3 slices and having Max length 3000
#7 (5, 2), requiring 5 slices and having Max length 1500
#8 (3, 5), requiring 5 slices and having Max length 1500
#9 (4, 2), requiring 6 slices and having Max length 600
#10 (5, 4), requiring 3 slices and having Max length 3000
--- THE DIFFERENT ROUTING LOADS --- 
4, 5, 3, 6.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Tried aggregator 2 times.
MIP Presolve eliminated 6244 rows and 1167 columns.
MIP Presolve modified 3720 coefficients.
Aggregator did 293 substitutions.
Reduced MIP has 7063 rows, 1817 columns, and 145615 nonzeros.
Reduced MIP has 1817 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.58 sec. (849.16 ticks)
Found incumbent of value 1469.000000 after 0.76 sec. (1069.54 ticks)
Probing time = 0.02 sec. (3.64 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 7063 rows, 1817 columns, and 145615 nonzeros.
Reduced MIP has 1817 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.17 sec. (203.45 ticks)
Probing time = 0.01 sec. (3.62 ticks)
Clique table members: 9385.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.05 sec. (34.16 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                         1469.0000        0.0000           100.00%
Found incumbent of value 1469.000000 after 1.03 sec. (1342.94 ticks)
*     0+    0                         1252.0000        0.0000           100.00%
Found incumbent of value 1252.000000 after 1.03 sec. (1343.63 ticks)
*     0+    0                          877.0000        0.0000           100.00%
Found incumbent of value 877.000000 after 1.03 sec. (1343.98 ticks)
*     0     0      integral     0      452.0000      452.0000      219    0.00%
Elapsed time = 1.04 sec. (1348.43 ticks, tree = 0.00 MB, solutions = 4)
Found incumbent of value 452.000000 after 1.04 sec. (1348.43 ticks)

Root node processing (before b&c):
  Real time             =    1.04 sec. (1348.58 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    1.04 sec. (1348.58 ticks)
Solved!
Optimization done in 1.0485 secs.
Objective Function Value: 452
For demand 1 : 
(5, 0)--(1, 0)
For demand 2 : 
(1, 0)--(2, 0)
For demand 3 : 
(4, 0)--(1, 0)
For demand 4 : 
(1, 0)--(2, 0)
For demand 5 : 
(3, 0)--(1, 0)
For demand 6 : 
(2, 3)--(5, 0)
(3, 0)--(2, 3)
For demand 7 : 
(5, 0)--(2, 0)
For demand 8 : 
(3, 0)--(1, 12)
(1, 12)--(5, 0)
For demand 9 : 
(4, 0)--(3, 9)
(3, 9)--(2, 0)
For demand 10 : 
(5, 0)--(1, 7)
(1, 7)--(4, 0)
Number of cplex cuts: 0
Status: Optimal

--- Slice occupation ---
#1. ****   *****                  
#2. ************                  
#3. *********                     
#4. *******                       
#5. *********                     
#6. ********                      
#7.    ******                     

Time taken by program is : 1.239467 sec
--- ROUTING DEMANDS --- 
#11 (4, 1), requiring 3 slices and having Max length 3000.000000000
#12 (4, 5), requiring 5 slices and having Max length 1500.000000000
#13 (3, 4), requiring 6 slices and having Max length 600.000000000
#14 (3, 1), requiring 4 slices and having Max length 1500.000000000
#15 (3, 4), requiring 6 slices and having Max length 600.000000000
#16 (1, 2), requiring 4 slices and having Max length 1500.000000000
#17 (4, 2), requiring 4 slices and having Max length 1500.000000000
#18 (5, 1), requiring 5 slices and having Max length 1500.000000000
#19 (1, 2), requiring 4 slices and having Max length 1500.000000000
#20 (1, 2), requiring 6 slices and having Max length 600.000000000
--- THE DIFFERENT ROUTING LOADS --- 
3, 5, 6, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Tried aggregator 2 times.
MIP Presolve eliminated 9665 rows and 941 columns.
MIP Presolve modified 2025 coefficients.
Aggregator did 218 substitutions.
Reduced MIP has 3378 rows, 1023 columns, and 85606 nonzeros.
Reduced MIP has 1023 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.38 sec. (629.35 ticks)
Found incumbent of value 1518.000000 after 0.49 sec. (783.03 ticks)
Probing fixed 14 vars, tightened 0 bounds.
Probing time = 0.01 sec. (9.47 ticks)
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 12 rows and 21 columns.
MIP Presolve modified 1454 coefficients.
Reduced MIP has 3267 rows, 1002 columns, and 82350 nonzeros.
Reduced MIP has 1002 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.11 sec. (143.25 ticks)
Probing time = 0.01 sec. (3.20 ticks)
Clique table members: 4550.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.03 sec. (31.54 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                         1518.0000        0.0000           100.00%
Found incumbent of value 1518.000000 after 0.67 sec. (988.25 ticks)
*     0+    0                         1420.0000        0.0000           100.00%
Found incumbent of value 1420.000000 after 0.67 sec. (988.61 ticks)
*     0+    0                         1399.0000        0.0000           100.00%
Found incumbent of value 1399.000000 after 0.67 sec. (988.70 ticks)
*     0+    0                         1371.0000        0.0000           100.00%
Found incumbent of value 1371.000000 after 0.67 sec. (988.88 ticks)
      0     0     1209.0000    19     1371.0000     1209.0000      363   11.82%
*     0+    0                         1308.0000     1209.0000             7.57%
Found incumbent of value 1308.000000 after 0.69 sec. (1004.56 ticks)
*     0+    0                         1214.0000     1209.0000             0.41%
Found incumbent of value 1214.000000 after 0.76 sec. (1075.42 ticks)
      0     0        cutoff           1214.0000     1214.0000      459    0.00%
Elapsed time = 0.76 sec. (1075.72 ticks, tree = 0.01 MB, solutions = 6)

Clique cuts applied:  1
Zero-half cuts applied:  6
Lift and project cuts applied:  1
Gomory fractional cuts applied:  3

Root node processing (before b&c):
  Real time             =    0.76 sec. (1076.06 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.76 sec. (1076.06 ticks)
Solved!
Optimization done in 0.766622066 secs.
Objective Function Value: 1214.000000000
For demand 11 : 
(4, 0)--(1, 0)
For demand 12 : 
(4, 0)--(1, 17)
(1, 17)--(5, 0)
For demand 13 : 
(3, 0)--(1, 23)
(1, 23)--(4, 0)
For demand 14 : 
(3, 0)--(1, 0)
For demand 15 : 
(3, 0)--(4, 0)
For demand 16 : 
(1, 0)--(2, 0)
For demand 17 : 
(4, 0)--(3, 13)
(3, 13)--(2, 0)
For demand 18 : 
(5, 0)--(1, 0)
For demand 19 : 
(1, 0)--(2, 0)
For demand 20 : 
(1, 0)--(2, 0)
Number of cplex cuts: 11
Status: Optimal

--- Slice occupation ---
#1. ****   ********* ******       
#2. **********************        
#3. ***********************       
#4. **********  ***********       
#5. *************                 
#6. ********                      
#7.    ****************           

Time taken by program is : 0.887852200 sec
--- ROUTING DEMANDS --- 
#21 (4, 3), requiring 6 slices and having Max length 600.000000000
#22 (5, 4), requiring 3 slices and having Max length 3000.000000000
#23 (1, 2), requiring 3 slices and having Max length 3000.000000000
#24 (1, 2), requiring 4 slices and having Max length 1500.000000000
#25 (5, 1), requiring 4 slices and having Max length 1500.000000000
#26 (5, 2), requiring 4 slices and having Max length 1500.000000000
#27 (1, 2), requiring 5 slices and having Max length 1500.000000000
#28 (3, 2), requiring 4 slices and having Max length 1500.000000000
#29 (3, 2), requiring 3 slices and having Max length 3000.000000000
#30 (4, 2), requiring 4 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 3, 4, 5.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Tried aggregator 2 times.
MIP Presolve eliminated 12529 rows and 685 columns.
MIP Presolve modified 1447 coefficients.
Aggregator did 65 substitutions.
Reduced MIP has 286 rows, 256 columns, and 3493 nonzeros.
Reduced MIP has 256 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (30.59 ticks)
Found incumbent of value 1706.000000 after 0.03 sec. (37.93 ticks)
Probing fixed 111 vars, tightened 0 bounds.
Probing time = 0.00 sec. (1.94 ticks)
Tried aggregator 2 times.
MIP Presolve eliminated 126 rows and 139 columns.
MIP Presolve modified 14 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 154 rows, 111 columns, and 1386 nonzeros.
Reduced MIP has 111 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (2.15 ticks)
Probing fixed 4 vars, tightened 0 bounds.
Probing time = 0.00 sec. (0.55 ticks)
Tried aggregator 1 time.
Detecting symmetries...
MIP Presolve eliminated 26 rows and 11 columns.
MIP Presolve modified 4 coefficients.
Reduced MIP has 128 rows, 100 columns, and 1090 nonzeros.
Reduced MIP has 100 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (1.12 ticks)
Probing time = 0.00 sec. (0.44 ticks)
Clique table members: 303.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.00 sec. (0.48 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                         1706.0000       84.0000            95.08%
Found incumbent of value 1706.000000 after 0.04 sec. (46.13 ticks)
*     0+    0                         1685.0000       84.0000            95.01%
Found incumbent of value 1685.000000 after 0.04 sec. (46.22 ticks)
      0     0        cutoff           1685.0000     1685.0000       47    0.00%
      0     0        cutoff           1685.0000     1685.0000       47    0.00%
Elapsed time = 0.04 sec. (46.35 ticks, tree = 0.01 MB, solutions = 2)

Root node processing (before b&c):
  Real time             =    0.04 sec. (46.37 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.04 sec. (46.37 ticks)
Solved!
Optimization done in 0.044892073 secs.
Objective Function Value: 1685.000000000
For demand 21 : 
(4, 0)--(3, 0)
For demand 22 : 
(5, 0)--(2, 23)
(3, 23)--(4, 0)
(2, 23)--(3, 23)
For demand 23 : 
(1, 0)--(2, 0)
For demand 24 : 
(1, 0)--(5, 30)
(5, 30)--(2, 0)
For demand 25 : 
(5, 0)--(1, 0)
For demand 26 : 
(5, 0)--(2, 0)
For demand 27 : 
(1, 0)--(3, 28)
(3, 28)--(2, 0)
For demand 28 : 
(3, 0)--(2, 0)
For demand 29 : 
(3, 0)--(2, 0)
For demand 30 : 
(4, 0)--(1, 30)
(1, 30)--(2, 0)
Number of cplex cuts: 0
Status: Optimal

--- Slice occupation ---
#1. ****   ********* ***********  
#2. ******************************
#3. ******************************
#4. **********  ***********   ****
#5. ****************************  
#6. ************        ***   ****
#7.    **************** ********* 

Time taken by program is : 0.095644700 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
#34 (3, 4), requiring 6 slices and having Max length 600.000000000
#35 (4, 3), requiring 6 slices and having Max length 600.000000000
#36 (4, 5), requiring 6 slices and having Max length 600.000000000
#37 (5, 3), requiring 4 slices and having Max length 1500.000000000
#38 (5, 1), requiring 4 slices and having Max length 1500.000000000
#39 (4, 1), requiring 5 slices and having Max length 1500.000000000
#40 (5, 2), requiring 4 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.59 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.70 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.70 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.021048800 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
#34 (3, 4), requiring 6 slices and having Max length 600.000000000
#35 (4, 3), requiring 6 slices and having Max length 600.000000000
#36 (4, 5), requiring 6 slices and having Max length 600.000000000
#37 (5, 3), requiring 4 slices and having Max length 1500.000000000
#38 (5, 1), requiring 4 slices and having Max length 1500.000000000
#39 (4, 1), requiring 5 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.54 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.64 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.64 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.018974000 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
#34 (3, 4), requiring 6 slices and having Max length 600.000000000
#35 (4, 3), requiring 6 slices and having Max length 600.000000000
#36 (4, 5), requiring 6 slices and having Max length 600.000000000
#37 (5, 3), requiring 4 slices and having Max length 1500.000000000
#38 (5, 1), requiring 4 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.49 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.59 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.59 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.016674800 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
#34 (3, 4), requiring 6 slices and having Max length 600.000000000
#35 (4, 3), requiring 6 slices and having Max length 600.000000000
#36 (4, 5), requiring 6 slices and having Max length 600.000000000
#37 (5, 3), requiring 4 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.45 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.53 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.53 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.014917200 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
#34 (3, 4), requiring 6 slices and having Max length 600.000000000
#35 (4, 3), requiring 6 slices and having Max length 600.000000000
#36 (4, 5), requiring 6 slices and having Max length 600.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.40 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.48 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.48 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.013682500 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
#34 (3, 4), requiring 6 slices and having Max length 600.000000000
#35 (4, 3), requiring 6 slices and having Max length 600.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.36 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.42 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.42 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.011732900 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
#34 (3, 4), requiring 6 slices and having Max length 600.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.31 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.37 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.37 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.009987000 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
#33 (2, 1), requiring 4 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5, 4.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.26 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.31 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.31 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.008436600 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6, 5.
Called Path Existence preprocessing.
Called Length preprocessing.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.12 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.14 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.14 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
Time taken by program is : 0.004877400 sec
--- ROUTING DEMANDS --- 
#31 (2, 5), requiring 6 slices and having Max length 600.000000000
--- THE DIFFERENT ROUTING LOADS --- 
6.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Found incumbent of value 126.000000 after 0.00 sec. (0.01 ticks)
Tried aggregator 1 time.
MIP Presolve eliminated 486 rows and 34 columns.
All rows and columns eliminated.
Presolve time = 0.00 sec. (0.16 ticks)

Root node processing (before b&c):
  Real time             =    0.00 sec. (0.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.00 sec. (0.17 ticks)
Solved!
Optimization done in 0.001778126 secs.
Objective Function Value: 126.000000000
For demand 31 : 
(2, 0)--(5, 0)
Number of cplex cuts: 0
Status: Optimal

--- Slice occupation ---
#1. ****   ********* ***********  
#2. ******************************
#3. ******************************
#4. **********  ***********   ****
#5. ****************************  
#6. ******************  ***   ****
#7.    **************** ********* 

Time taken by program is : 0.002969100 sec
--- ROUTING DEMANDS --- 
#32 (5, 4), requiring 5 slices and having Max length 1500.000000000
--- THE DIFFERENT ROUTING LOADS --- 
5.
Called Path Existence preprocessing.
Called Length preprocessing.
--- Solver has been initalized ---
--- CPLEX has been chosen ---
Variables have been defined...
Objective function has been defined...
Source constraints have been defined...
Flow conservation constraints have been defined...
Target constraints have been defined...
Length constraints have been defined...
First set of Improved Non-Overlapping constraints has been defined...
Second set of Improved Non-Overlapping constraints has been defined...
LP model has been exported...
CPLEX parameters have been defined...
Solving...
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               2147483647
Infeasibility row 'Source(5,32)':  0  = 1.
Presolve time = 0.00 sec. (0.03 ticks)
Solved!
Could not find a path!
Status: Infeasible
Decrease the number of demands to be treated.
There is no room for an additional demand.
Time taken by program is : 0.001182300 sec
Output TM_1_FINAL
Output EdgeSliceHols: TM_1_FINAL
Total time taken by program is : 2.377426700 sec
