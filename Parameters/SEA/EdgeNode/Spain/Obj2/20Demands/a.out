PARAMETER FILE: ../Parameters/SEA/EdgeNode/Spain/Obj2/20Demands/onlineParameters.txt
Getting input file paths...
Getting topology file...
... /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/Spain/Link.csv
WARNING: Field 'initialMappingDemandFile=' is empty.
WARNING: Field 'initialMappingAssignmentFile=' is empty.
Getting GNPY parameters...
Getting formulation parameters...
Getting optimization parameters...
Getting execution parameters...
Getting subgradient parameters...
Populating online demand files...
Finish reading input.
TOPOLOGY FILE: /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/Spain/Link.csv
ROUTED DEMANDS FILE: 
INITIAL ASSIGNMENT FILE: 
All information from input is consistent.
> Number of online demand files: 1
--- READING INSTANCE... --- 
--- CREATING INITIAL MAPPING... --- 
Reading /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/Spain/Link.csv.
Creating edge #1. 1 -- 3. nb slices: 30, length: 280, cost: 1
Creating edge #2. 1 -- 5. nb slices: 30, length: 250, cost: 1
Creating edge #3. 1 -- 2. nb slices: 30, length: 460, cost: 1
Creating edge #4. 1 -- 4. nb slices: 30, length: 350, cost: 1
Creating edge #5. 2 -- 3. nb slices: 30, length: 280, cost: 1
Creating edge #6. 2 -- 5. nb slices: 30, length: 230, cost: 1
Creating edge #7. 3 -- 4. nb slices: 30, length: 320, cost: 1
Starting with an empty initial mapping. 
0 are present in the initial mapping.
--- READING NEW DEMANDS TO BE ROUTED... --- 
Reading /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/Spain/Obj2/20Demands/Demand/Demand.csv ...
out

--- The Non Routed Demands ---
#1. 5 -- 2. nbSlices: 6, maxLength: 600, ROUTED: NO
#2. 2 -- 3. nbSlices: 4, maxLength: 1500, ROUTED: NO
#3. 1 -- 2. nbSlices: 3, maxLength: 3000, ROUTED: NO
#4. 2 -- 4. nbSlices: 3, maxLength: 3000, ROUTED: NO
#5. 4 -- 2. nbSlices: 3, maxLength: 3000, ROUTED: NO
#6. 3 -- 4. nbSlices: 4, maxLength: 1500, ROUTED: NO
#7. 2 -- 3. nbSlices: 4, maxLength: 1500, ROUTED: NO
#8. 5 -- 3. nbSlices: 6, maxLength: 600, ROUTED: NO
#9. 3 -- 1. nbSlices: 6, maxLength: 600, ROUTED: NO
#10. 4 -- 1. nbSlices: 4, maxLength: 1500, ROUTED: NO
#11. 2 -- 1. nbSlices: 3, maxLength: 3000, ROUTED: NO
#12. 2 -- 1. nbSlices: 5, maxLength: 1500, ROUTED: NO
#13. 1 -- 2. nbSlices: 6, maxLength: 600, ROUTED: NO
#14. 3 -- 2. nbSlices: 5, maxLength: 1500, ROUTED: NO
#15. 2 -- 3. nbSlices: 6, maxLength: 600, ROUTED: NO
#16. 4 -- 2. nbSlices: 6, maxLength: 600, ROUTED: NO
#17. 4 -- 3. nbSlices: 3, maxLength: 3000, ROUTED: NO
#18. 1 -- 2. nbSlices: 4, maxLength: 1500, ROUTED: NO
#19. 2 -- 5. nbSlices: 5, maxLength: 1500, ROUTED: NO
#20. 1 -- 2. nbSlices: 5, maxLength: 1500, ROUTED: NO

20 demands to be routed.
--- ROUTING DEMANDS --- 
#1 (5, 2), requiring 6 slices and having Max length 600
#2 (2, 3), requiring 4 slices and having Max length 1500
#3 (1, 2), requiring 3 slices and having Max length 3000
#4 (2, 4), requiring 3 slices and having Max length 3000
#5 (4, 2), requiring 3 slices and having Max length 3000
#6 (3, 4), requiring 4 slices and having Max length 1500
#7 (2, 3), requiring 4 slices and having Max length 1500
#8 (5, 3), requiring 6 slices and having Max length 600
#9 (3, 1), requiring 6 slices and having Max length 600
#10 (4, 1), requiring 4 slices and having Max length 1500
#11 (2, 1), requiring 3 slices and having Max length 3000
#12 (2, 1), requiring 5 slices and having Max length 1500
#13 (1, 2), requiring 6 slices and having Max length 600
#14 (3, 2), requiring 5 slices and having Max length 1500
#15 (2, 3), requiring 6 slices and having Max length 600
#16 (4, 2), requiring 6 slices and having Max length 600
#17 (4, 3), requiring 3 slices and having Max length 3000
#18 (1, 2), requiring 4 slices and having Max length 1500
#19 (2, 5), requiring 5 slices and having Max length 1500
#20 (1, 2), requiring 5 slices and having Max length 1500
--> THE DIFFERENT ROUTING LOADS: 6, 4, 3, 5.
--- Edge-Node formulation has been chosen. |K| = 20, |S| = 30. ---
X variables were created.
Z variables were created.
T variables were created.
MaxSlicePerLink variables were created.
MaxSliceOverall variable was created.
Origin constraints have been defined...
Destination constraints have been defined...
Degree constraints have been defined...
Transmission reach constraints have been defined...
Channel selection constraints have been defined...
Forbidden slots constraints have been defined...
Edge-slots constraints have been defined...
Demand-edge-slots constraints have been defined...
Non-overlapping constraints have been defined...
Max Used Slice Per Link constraints have been defined...
Max Used Slice Overall constraints have been defined...
Objective obj_2 has been defined.
--- Edge-Node formulation has been defined ---
--- CPLEX has been initialized ---
CPLEX parameters have been defined...
CPLEX variables have been defined...
CPLEX constraints have been defined...
CPLEX objective has been defined...
LP model has been exported.
Solving...
Chosen objective: obj_2
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               7200
Lazy constraint(s) or lazy constraint/branch callback is present.
    Disabling dual reductions (CPX_PARAM_REDUCE) in presolve.
    Disabling presolve reductions that prevent crushing forms.
Tried aggregator 3 times.
MIP Presolve eliminated 360 rows and 560 columns.
MIP Presolve modified 529 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 8559 rows, 13086 columns, and 50516 nonzeros.
Reduced MIP has 4703 binaries, 8 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.05 sec. (45.78 ticks)
Probing fixed 155 vars, tightened 4052 bounds.
Probing time = 0.29 sec. (75.11 ticks)
Cover probing fixed 0 vars, tightened 15 bounds.
Tried aggregator 2 times.
MIP Presolve eliminated 164 rows and 314 columns.
Aggregator did 1 substitutions.
Reduced MIP has 8394 rows, 12771 columns, and 49429 nonzeros.
Reduced MIP has 4546 binaries, 8 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.07 sec. (60.68 ticks)
Probing time = 0.02 sec. (7.04 ticks)
Cover probing fixed 0 vars, tightened 2 bounds.
Clique table members: 35007.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0.44 sec. (326.23 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0       24.0000   958                     24.0000     1950         
      0     0       24.0000   958                    Cuts: 92     3538         
      0     0       24.0000   958                   Cuts: 589     5595         
      0     0       24.0000   958                     User: 2     5722         
      0     0       24.0000   958                    Cuts: 84     6365         
      0     0       24.0000   958                     User: 2     6365         
*     0+    0                           25.0000       24.0000             4.00%
Found incumbent of value 25.000000 after 6.14 sec. (3330.55 ticks)
*     0+    0                           24.0000       24.0000             0.00%
Found incumbent of value 24.000000 after 6.35 sec. (3429.14 ticks)
      0     0  -1.00000e+75     0       24.0000       24.0000     6365    0.00%
      0     0        cutoff             24.0000       24.0000     6365    0.00%
Elapsed time = 6.36 sec. (3432.70 ticks, tree = 0.01 MB, solutions = 2)

GUB cover cuts applied:  2
Clique cuts applied:  2
Cover cuts applied:  5
Implied bound cuts applied:  1
Mixed integer rounding cuts applied:  4
Zero-half cuts applied:  14
User cuts applied:  20

Root node processing (before b&c):
  Real time             =    6.36 sec. (3433.17 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    6.36 sec. (3433.17 ticks)
Objective Function Value: 24
Optimization done in 6.37653 secs.
Status: Optimal
Objective Function Value: 24
x(3,4,4) = 1
x(3,4,6) = 1
x(3,4,16) = 1
x(3,4,17) = 1
x(2,5,1) = 1
x(2,5,19) = 1
x(2,3,2) = 1
x(2,3,4) = 1
x(2,3,7) = 1
x(2,3,14) = 1
x(2,3,15) = 1
x(2,3,16) = 1
x(1,4,5) = 1
x(1,4,10) = 1
x(1,2,3) = 1
x(1,2,5) = 1
x(1,2,11) = 1
x(1,2,12) = 1
x(1,2,13) = 1
x(1,2,18) = 1
x(1,2,20) = 1
x(1,5,8) = 1
x(1,3,8) = 1
x(1,3,9) = 1
z(4,6) = 1
z(4,7) = 1
z(4,10) = 1
z(5,12) = 1
z(6,1) = 1
z(6,9) = 1
z(9,18) = 1
z(10,16) = 1
z(15,20) = 1
z(16,14) = 1
z(17,8) = 1
z(18,5) = 1
z(19,17) = 1
z(21,2) = 1
z(21,11) = 1
z(24,4) = 1
z(27,13) = 1
z(30,3) = 1
z(30,15) = 1
z(30,19) = 1
t(7,1,6) = 1
t(7,2,6) = 1
t(7,3,6) = 1
t(7,4,6) = 1
t(7,5,16) = 1
t(7,6,16) = 1
t(7,7,16) = 1
t(7,8,16) = 1
t(7,9,16) = 1
t(7,10,16) = 1
t(7,17,17) = 1
t(7,18,17) = 1
t(7,19,17) = 1
t(7,22,4) = 1
t(7,23,4) = 1
t(7,24,4) = 1
t(6,1,1) = 1
t(6,2,1) = 1
t(6,3,1) = 1
t(6,4,1) = 1
t(6,5,1) = 1
t(6,6,1) = 1
t(6,26,19) = 1
t(6,27,19) = 1
t(6,28,19) = 1
t(6,29,19) = 1
t(6,30,19) = 1
t(5,1,7) = 1
t(5,2,7) = 1
t(5,3,7) = 1
t(5,4,7) = 1
t(5,5,16) = 1
t(5,6,16) = 1
t(5,7,16) = 1
t(5,8,16) = 1
t(5,9,16) = 1
t(5,10,16) = 1
t(5,12,14) = 1
t(5,13,14) = 1
t(5,14,14) = 1
t(5,15,14) = 1
t(5,16,14) = 1
t(5,18,2) = 1
t(5,19,2) = 1
t(5,20,2) = 1
t(5,21,2) = 1
t(5,22,4) = 1
t(5,23,4) = 1
t(5,24,4) = 1
t(5,25,15) = 1
t(5,26,15) = 1
t(5,27,15) = 1
t(5,28,15) = 1
t(5,29,15) = 1
t(5,30,15) = 1
t(4,1,10) = 1
t(4,2,10) = 1
t(4,3,10) = 1
t(4,4,10) = 1
t(4,16,5) = 1
t(4,17,5) = 1
t(4,18,5) = 1
t(3,1,12) = 1
t(3,2,12) = 1
t(3,3,12) = 1
t(3,4,12) = 1
t(3,5,12) = 1
t(3,6,18) = 1
t(3,7,18) = 1
t(3,8,18) = 1
t(3,9,18) = 1
t(3,11,20) = 1
t(3,12,20) = 1
t(3,13,20) = 1
t(3,14,20) = 1
t(3,15,20) = 1
t(3,16,5) = 1
t(3,17,5) = 1
t(3,18,5) = 1
t(3,19,11) = 1
t(3,20,11) = 1
t(3,21,11) = 1
t(3,22,13) = 1
t(3,23,13) = 1
t(3,24,13) = 1
t(3,25,13) = 1
t(3,26,13) = 1
t(3,27,13) = 1
t(3,28,3) = 1
t(3,29,3) = 1
t(3,30,3) = 1
t(2,12,8) = 1
t(2,13,8) = 1
t(2,14,8) = 1
t(2,15,8) = 1
t(2,16,8) = 1
t(2,17,8) = 1
t(1,1,9) = 1
t(1,2,9) = 1
t(1,3,9) = 1
t(1,4,9) = 1
t(1,5,9) = 1
t(1,6,9) = 1
t(1,12,8) = 1
t(1,13,8) = 1
t(1,14,8) = 1
t(1,15,8) = 1
t(1,16,8) = 1
t(1,17,8) = 1
maxSlice(6) = 30
maxSlice(5) = 30
maxSlice(4) = 30
maxSlice(3) = 30
maxSlice(2) = 30
maxSlice(1) = 30
maxSlice(0) = 30
maxSlice = 30
Update RSA
Feasible

--- Slice occupation ---
#1. ******     ******             
#2.            ******             
#3. ********* ********************
#4. ****           ***            
#5. ********** ***** *************
#6. ******                   *****
#7. **********      ***  ***      

For demand 1 : 
(5--2, 6)

For demand 2 : 
(2--3, 21)

For demand 3 : 
(1--2, 30)

For demand 4 : 
(2--3, 24)
(3--4, 24)

For demand 5 : 
(4--1, 18)
(1--2, 18)

For demand 6 : 
(3--4, 4)

For demand 7 : 
(2--3, 4)

For demand 8 : 
(5--1, 17)
(1--3, 17)

For demand 9 : 
(3--1, 6)

For demand 10 : 
(4--1, 4)

For demand 11 : 
(2--1, 21)

For demand 12 : 
(2--1, 5)

For demand 13 : 
(1--2, 27)

For demand 14 : 
(3--2, 16)

For demand 15 : 
(2--3, 30)

For demand 16 : 
(4--3, 10)
(3--2, 10)

For demand 17 : 
(4--3, 19)

For demand 18 : 
(1--2, 9)

For demand 19 : 
(2--5, 30)

For demand 20 : 
(1--2, 15)

Output Demand_1
Output EdgeSliceHols: Demand_1
Time taken by iteration is : 6.603214 sec
Output Demand_FINAL
Output EdgeSliceHols: Demand_FINAL

--- The Demands ---
#1. 5 -- 2. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#2. 2 -- 3. nbSlices: 4, maxLength: 1500.000000000, ROUTED: YES
#3. 1 -- 2. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#4. 2 -- 4. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#5. 4 -- 2. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#6. 3 -- 4. nbSlices: 4, maxLength: 1500.000000000, ROUTED: YES
#7. 2 -- 3. nbSlices: 4, maxLength: 1500.000000000, ROUTED: YES
#8. 5 -- 3. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#9. 3 -- 1. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#10. 4 -- 1. nbSlices: 4, maxLength: 1500.000000000, ROUTED: YES
#11. 2 -- 1. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#12. 2 -- 1. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#13. 1 -- 2. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#14. 3 -- 2. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#15. 2 -- 3. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#16. 4 -- 2. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#17. 4 -- 3. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#18. 1 -- 2. nbSlices: 4, maxLength: 1500.000000000, ROUTED: YES
#19. 2 -- 5. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#20. 1 -- 2. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES

Time taken by optimization is : 6.623223300 sec
Total time taken by program is : 6.638295300 sec
