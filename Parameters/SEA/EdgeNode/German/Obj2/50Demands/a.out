PARAMETER FILE: ../Parameters/SEA/EdgeNode/German/Obj2/50Demands/onlineParameters.txt
Getting input file paths...
Getting topology file...
... /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/German/Link.csv
WARNING: Field 'initialMappingDemandFile=' is empty.
WARNING: Field 'initialMappingAssignmentFile=' is empty.
Getting GNPY parameters...
Getting formulation parameters...
Getting optimization parameters...
Getting execution parameters...
Getting subgradient parameters...
Populating online demand files...
Finish reading input.
TOPOLOGY FILE: /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/German/Link.csv
ROUTED DEMANDS FILE: 
INITIAL ASSIGNMENT FILE: 
All information from input is consistent.
> Number of online demand files: 1
--- READING INSTANCE... --- 
--- CREATING INITIAL MAPPING... --- 
Reading /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/German/Link.csv.
Creating edge #1. 1 -- 14. nb slices: 140, length: 122.16, cost: 1
Creating edge #2. 2 -- 14. nb slices: 140, length: 111.329, cost: 1
Creating edge #3. 3 -- 14. nb slices: 140, length: 96.7743, cost: 1
Creating edge #4. 3 -- 4. nb slices: 140, length: 255.611, cost: 1
Creating edge #5. 2 -- 3. nb slices: 140, length: 138.725, cost: 1
Creating edge #6. 2 -- 4. nb slices: 140, length: 241.005, cost: 1
Creating edge #7. 4 -- 7. nb slices: 140, length: 146.951, cost: 1
Creating edge #8. 2 -- 7. nb slices: 140, length: 204.09, cost: 1
Creating edge #9. 7 -- 15. nb slices: 140, length: 296.554, cost: 1
Creating edge #10. 6 -- 7. nb slices: 140, length: 232.003, cost: 1
Creating edge #11. 6 -- 15. nb slices: 140, length: 181.42, cost: 1
Creating edge #12. 13 -- 15. nb slices: 140, length: 68.2969, cost: 1
Creating edge #13. 10 -- 15. nb slices: 140, length: 154.625, cost: 1
Creating edge #14. 10 -- 16. nb slices: 140, length: 69.6874, cost: 1
Creating edge #15. 9 -- 10. nb slices: 140, length: 36.655, cost: 1
Creating edge #16. 8 -- 9. nb slices: 140, length: 27.3268, cost: 1
Creating edge #17. 8 -- 16. nb slices: 140, length: 25.9849, cost: 1
Creating edge #18. 1 -- 16. nb slices: 140, length: 234.435, cost: 1
Creating edge #19. 2 -- 16. nb slices: 140, length: 193.939, cost: 1
Creating edge #20. 13 -- 17. nb slices: 140, length: 50.5769, cost: 1
Creating edge #21. 12 -- 17. nb slices: 140, length: 65.7133, cost: 1
Creating edge #22. 11 -- 12. nb slices: 140, length: 74.2544, cost: 1
Creating edge #23. 6 -- 12. nb slices: 140, length: 154.468, cost: 1
Creating edge #24. 5 -- 11. nb slices: 140, length: 121.233, cost: 1
Creating edge #25. 5 -- 6. nb slices: 140, length: 151.216, cost: 1
Starting with an empty initial mapping. 
0 are present in the initial mapping.
--- READING NEW DEMANDS TO BE ROUTED... --- 
Reading /mnt/c/FlexOptim/RSA/Parameters/SEA/EdgeNode/German/Obj2/50Demands/Demand/50Demand.csv ...
out

--- The Non Routed Demands ---
#1. 7 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#2. 7 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#3. 7 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#4. 13 -- 16. nbSlices: 3, maxLength: 3000, ROUTED: NO
#5. 8 -- 13. nbSlices: 3, maxLength: 3000, ROUTED: NO
#6. 10 -- 17. nbSlices: 3, maxLength: 3000, ROUTED: NO
#7. 2 -- 10. nbSlices: 5, maxLength: 1500, ROUTED: NO
#8. 5 -- 17. nbSlices: 3, maxLength: 3000, ROUTED: NO
#9. 11 -- 15. nbSlices: 3, maxLength: 3000, ROUTED: NO
#10. 3 -- 4. nbSlices: 3, maxLength: 3000, ROUTED: NO
#11. 6 -- 13. nbSlices: 3, maxLength: 3000, ROUTED: NO
#12. 2 -- 4. nbSlices: 5, maxLength: 1500, ROUTED: NO
#13. 6 -- 7. nbSlices: 6, maxLength: 600, ROUTED: NO
#14. 15 -- 16. nbSlices: 6, maxLength: 600, ROUTED: NO
#15. 10 -- 13. nbSlices: 3, maxLength: 3000, ROUTED: NO
#16. 2 -- 8. nbSlices: 3, maxLength: 3000, ROUTED: NO
#17. 6 -- 17. nbSlices: 3, maxLength: 3000, ROUTED: NO
#18. 8 -- 15. nbSlices: 5, maxLength: 1500, ROUTED: NO
#19. 2 -- 7. nbSlices: 5, maxLength: 1500, ROUTED: NO
#20. 5 -- 12. nbSlices: 3, maxLength: 3000, ROUTED: NO
#21. 2 -- 16. nbSlices: 3, maxLength: 3000, ROUTED: NO
#22. 9 -- 15. nbSlices: 3, maxLength: 3000, ROUTED: NO
#23. 12 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#24. 12 -- 15. nbSlices: 5, maxLength: 1500, ROUTED: NO
#25. 6 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#26. 6 -- 15. nbSlices: 3, maxLength: 3000, ROUTED: NO
#27. 10 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#28. 10 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#29. 10 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#30. 6 -- 12. nbSlices: 3, maxLength: 3000, ROUTED: NO
#31. 3 -- 7. nbSlices: 3, maxLength: 3000, ROUTED: NO
#32. 5 -- 6. nbSlices: 5, maxLength: 1500, ROUTED: NO
#33. 4 -- 7. nbSlices: 6, maxLength: 600, ROUTED: NO
#34. 2 -- 3. nbSlices: 3, maxLength: 3000, ROUTED: NO
#35. 1 -- 14. nbSlices: 3, maxLength: 3000, ROUTED: NO
#36. 5 -- 11. nbSlices: 3, maxLength: 3000, ROUTED: NO
#37. 15 -- 17. nbSlices: 6, maxLength: 600, ROUTED: NO
#38. 15 -- 17. nbSlices: 6, maxLength: 600, ROUTED: NO
#39. 15 -- 17. nbSlices: 6, maxLength: 600, ROUTED: NO
#40. 15 -- 17. nbSlices: 6, maxLength: 600, ROUTED: NO
#41. 15 -- 17. nbSlices: 6, maxLength: 600, ROUTED: NO
#42. 15 -- 17. nbSlices: 6, maxLength: 600, ROUTED: NO
#43. 12 -- 13. nbSlices: 5, maxLength: 1500, ROUTED: NO
#44. 2 -- 14. nbSlices: 5, maxLength: 1500, ROUTED: NO
#45. 3 -- 14. nbSlices: 3, maxLength: 3000, ROUTED: NO
#46. 10 -- 16. nbSlices: 3, maxLength: 3000, ROUTED: NO
#47. 13 -- 15. nbSlices: 6, maxLength: 600, ROUTED: NO
#48. 12 -- 17. nbSlices: 3, maxLength: 3000, ROUTED: NO
#49. 8 -- 10. nbSlices: 3, maxLength: 3000, ROUTED: NO
#50. 13 -- 17. nbSlices: 3, maxLength: 3000, ROUTED: NO

50 demands to be routed.
--- ROUTING DEMANDS --- 
#1 (7, 15), requiring 6 slices and having Max length 600
#2 (7, 15), requiring 6 slices and having Max length 600
#3 (7, 15), requiring 6 slices and having Max length 600
#4 (13, 16), requiring 3 slices and having Max length 3000
#5 (8, 13), requiring 3 slices and having Max length 3000
#6 (10, 17), requiring 3 slices and having Max length 3000
#7 (2, 10), requiring 5 slices and having Max length 1500
#8 (5, 17), requiring 3 slices and having Max length 3000
#9 (11, 15), requiring 3 slices and having Max length 3000
#10 (3, 4), requiring 3 slices and having Max length 3000
#11 (6, 13), requiring 3 slices and having Max length 3000
#12 (2, 4), requiring 5 slices and having Max length 1500
#13 (6, 7), requiring 6 slices and having Max length 600
#14 (15, 16), requiring 6 slices and having Max length 600
#15 (10, 13), requiring 3 slices and having Max length 3000
#16 (2, 8), requiring 3 slices and having Max length 3000
#17 (6, 17), requiring 3 slices and having Max length 3000
#18 (8, 15), requiring 5 slices and having Max length 1500
#19 (2, 7), requiring 5 slices and having Max length 1500
#20 (5, 12), requiring 3 slices and having Max length 3000
#21 (2, 16), requiring 3 slices and having Max length 3000
#22 (9, 15), requiring 3 slices and having Max length 3000
#23 (12, 15), requiring 6 slices and having Max length 600
#24 (12, 15), requiring 5 slices and having Max length 1500
#25 (6, 15), requiring 6 slices and having Max length 600
#26 (6, 15), requiring 3 slices and having Max length 3000
#27 (10, 15), requiring 6 slices and having Max length 600
#28 (10, 15), requiring 6 slices and having Max length 600
#29 (10, 15), requiring 6 slices and having Max length 600
#30 (6, 12), requiring 3 slices and having Max length 3000
#31 (3, 7), requiring 3 slices and having Max length 3000
#32 (5, 6), requiring 5 slices and having Max length 1500
#33 (4, 7), requiring 6 slices and having Max length 600
#34 (2, 3), requiring 3 slices and having Max length 3000
#35 (1, 14), requiring 3 slices and having Max length 3000
#36 (5, 11), requiring 3 slices and having Max length 3000
#37 (15, 17), requiring 6 slices and having Max length 600
#38 (15, 17), requiring 6 slices and having Max length 600
#39 (15, 17), requiring 6 slices and having Max length 600
#40 (15, 17), requiring 6 slices and having Max length 600
#41 (15, 17), requiring 6 slices and having Max length 600
#42 (15, 17), requiring 6 slices and having Max length 600
#43 (12, 13), requiring 5 slices and having Max length 1500
#44 (2, 14), requiring 5 slices and having Max length 1500
#45 (3, 14), requiring 3 slices and having Max length 3000
#46 (10, 16), requiring 3 slices and having Max length 3000
#47 (13, 15), requiring 6 slices and having Max length 600
#48 (12, 17), requiring 3 slices and having Max length 3000
#49 (8, 10), requiring 3 slices and having Max length 3000
#50 (13, 17), requiring 3 slices and having Max length 3000
--> THE DIFFERENT ROUTING LOADS: 6, 3, 5.
--- Edge-Node formulation has been chosen. |K| = 50, |S| = 140. ---
X variables were created.
Z variables were created.
T variables were created.
MaxSlicePerLink variables were created.
MaxSliceOverall variable was created.
Origin constraints have been defined...
Destination constraints have been defined...
Degree constraints have been defined...
Transmission reach constraints have been defined...
Channel selection constraints have been defined...
Forbidden slots constraints have been defined...
Edge-slots constraints have been defined...
Demand-edge-slots constraints have been defined...
Non-overlapping constraints have been defined...
Max Used Slice Per Link constraints have been defined...
Max Used Slice Overall constraints have been defined...
Objective obj_2 has been defined.
--- Edge-Node formulation has been defined ---
--- CPLEX has been initialized ---
CPLEX parameters have been defined...
CPLEX variables have been defined...
CPLEX constraints have been defined...
CPLEX objective has been defined...
LP model has been exported.
Solving...
Chosen objective: obj_2
Version identifier: 12.10.0.0 | 2019-11-26 | 843d4de
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               7200
Lazy constraint(s) or lazy constraint/branch callback is present.
    Disabling dual reductions (CPX_PARAM_REDUCE) in presolve.
    Disabling presolve reductions that prevent crushing forms.
Tried aggregator 2 times.
MIP Presolve eliminated 1620 rows and 1740 columns.
MIP Presolve modified 6837 coefficients.
Aggregator did 30 substitutions.
Reduced MIP has 354150 rows, 535856 columns, and 2167108 nonzeros.
Reduced MIP has 183050 binaries, 26 generals, 0 SOSs, and 0 indicators.
Presolve time = 1.73 sec. (1868.79 ticks)
Elapsed time = 38.24 sec. (10000.12 ticks) for 54% of probing
Probing fixed 0 vars, tightened 175000 bounds.
Probing time = 77.39 sec. (16190.99 ticks)
Cover probing fixed 0 vars, tightened 2 bounds.
Tried aggregator 1 time.
Reduced MIP has 354150 rows, 535856 columns, and 2167108 nonzeros.
Reduced MIP has 183050 binaries, 26 generals, 0 SOSs, and 0 indicators.
Presolve time = 1.00 sec. (880.02 ticks)
Probing time = 0.57 sec. (137.91 ticks)
Cover probing fixed 0 vars, tightened 23 bounds.
Clique table members: 1475964.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 160.93 sec. (35731.73 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0       75.0000  9898                     75.0000    16723         
      0     0       80.0000  9898                  Cuts: 2339    39767         
      0     0       81.0000  9898                   Cuts: 972    62183         
      0     0       81.5000  9898                   Cuts: 782    72941         
      0     0       82.0000  9898                   Cuts: 155    83376         
      0     0       82.0000  9898                   Cuts: 535    91268         
      0     0       82.0000  9898                   Cuts: 388    96513         
      0     0       82.0000  9898                    Cuts: 46   105854         
      0     0       82.0000  9898                   Cuts: 452   113833         
      0     0       82.0000  9898                   Cuts: 504   123086         
      0     0       82.0000  9898                   Cuts: 208   127244         
      0     0       82.0000  9898                  Cuts: 1219   129522         
      0     0       82.0000  9898                  Cuts: 1289   140573         
      0     0       82.0000  9898                  Cuts: 1091   148263         
      0     0       82.0000  9898                   Cuts: 432   154640         
      0     0       82.0000  9898                   Cuts: 572   157717         
      0     0       82.0000  9898                   Cuts: 206   161929         
      0     0       82.0000  9898                   Cuts: 397   165016         
      0     0       82.0000  9898                   Cuts: 148   171214         
      0     0       82.0000  9898                   Cuts: 516   175214         
      0     0       82.0000  9898                   Cuts: 275   181967         
      0     0       82.0000  9898                   Cuts: 234   188983         
      0     0       82.0000  9898                   Cuts: 184   193333         
Heuristic still looking.
Heuristic still looking.
Heuristic still looking.
*     0+    0                           82.0000       82.0000             0.00%
Found incumbent of value 82.000000 after 5193.86 sec. (1761990.52 ticks)
      0     0  -1.00000e+75     0       82.0000       82.0000   193333    0.00%
      0     0        cutoff             82.0000       82.0000   193333    0.00%
Elapsed time = 5194.31 sec. (1762150.12 ticks, tree = 0.01 MB, solutions = 1)

GUB cover cuts applied:  1
Clique cuts applied:  3
Cover cuts applied:  26
Implied bound cuts applied:  1508
Flow cuts applied:  2
Mixed integer rounding cuts applied:  111
Zero-half cuts applied:  90
Lift and project cuts applied:  3
Gomory fractional cuts applied:  16
User cuts applied:  164

Root node processing (before b&c):
  Real time             = 5194.44 sec. (1762167.91 ticks)
Parallel b&c, 8 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) = 5194.44 sec. (1762167.91 ticks)
Objective Function Value: 82
Optimization done in 5194.58 secs.
Status: Optimal
Objective Function Value: 82
x(13,17,6) = 1
x(13,17,37) = 1
x(13,17,38) = 1
x(13,17,39) = 1
x(13,17,40) = 1
x(13,17,41) = 1
x(13,17,42) = 1
x(13,17,43) = 1
x(13,17,50) = 1
x(13,15,4) = 1
x(13,15,5) = 1
x(13,15,6) = 1
x(13,15,11) = 1
x(13,15,15) = 1
x(13,15,37) = 1
x(13,15,38) = 1
x(13,15,39) = 1
x(13,15,40) = 1
x(13,15,41) = 1
x(13,15,42) = 1
x(13,15,47) = 1
x(12,17,8) = 1
x(12,17,17) = 1
x(12,17,43) = 1
x(12,17,48) = 1
x(11,12,8) = 1
x(11,12,20) = 1
x(10,16,4) = 1
x(10,16,7) = 1
x(10,16,14) = 1
x(10,16,46) = 1
x(10,15,4) = 1
x(10,15,5) = 1
x(10,15,6) = 1
x(10,15,14) = 1
x(10,15,15) = 1
x(10,15,18) = 1
x(10,15,22) = 1
x(10,15,27) = 1
x(10,15,28) = 1
x(10,15,29) = 1
x(9,10,5) = 1
x(9,10,18) = 1
x(9,10,22) = 1
x(9,10,49) = 1
x(8,16,16) = 1
x(8,9,5) = 1
x(8,9,18) = 1
x(8,9,49) = 1
x(7,15,1) = 1
x(7,15,2) = 1
x(7,15,3) = 1
x(6,12,17) = 1
x(6,12,23) = 1
x(6,12,24) = 1
x(6,12,30) = 1
x(6,15,9) = 1
x(6,15,11) = 1
x(6,15,23) = 1
x(6,15,24) = 1
x(6,15,25) = 1
x(6,15,26) = 1
x(6,7,13) = 1
x(5,6,9) = 1
x(5,6,32) = 1
x(5,11,8) = 1
x(5,11,9) = 1
x(5,11,20) = 1
x(5,11,36) = 1
x(4,7,31) = 1
x(4,7,33) = 1
x(3,4,10) = 1
x(3,4,31) = 1
x(3,14,45) = 1
x(2,16,7) = 1
x(2,16,16) = 1
x(2,16,21) = 1
x(2,7,19) = 1
x(2,4,12) = 1
x(2,3,34) = 1
x(2,14,44) = 1
x(1,14,35) = 1
z(4,6) = 1
z(5,21) = 1
z(5,24) = 1
z(9,10) = 1
z(17,47) = 1
z(19,19) = 1
z(23,40) = 1
z(24,34) = 1
z(26,36) = 1
z(26,48) = 1
z(44,33) = 1
z(45,1) = 1
z(54,4) = 1
z(61,22) = 1
z(61,38) = 1
z(64,15) = 1
z(65,8) = 1
z(72,5) = 1
z(79,17) = 1
z(82,37) = 1
z(83,29) = 1
z(89,2) = 1
z(89,16) = 1
z(93,9) = 1
z(93,50) = 1
z(98,46) = 1
z(101,11) = 1
z(103,30) = 1
z(106,7) = 1
z(107,49) = 1
z(108,27) = 1
z(111,12) = 1
z(111,39) = 1
z(121,23) = 1
z(121,31) = 1
z(122,14) = 1
z(122,32) = 1
z(122,42) = 1
z(122,45) = 1
z(124,13) = 1
z(130,43) = 1
z(132,3) = 1
z(132,26) = 1
z(132,28) = 1
z(133,35) = 1
z(134,44) = 1
z(138,25) = 1
z(140,18) = 1
z(140,20) = 1
z(140,41) = 1
t(20,2,6) = 1
t(20,3,6) = 1
t(20,4,6) = 1
t(20,18,40) = 1
t(20,19,40) = 1
t(20,20,40) = 1
t(20,21,40) = 1
t(20,22,40) = 1
t(20,23,40) = 1
t(20,56,38) = 1
t(20,57,38) = 1
t(20,58,38) = 1
t(20,59,38) = 1
t(20,60,38) = 1
t(20,61,38) = 1
t(20,77,37) = 1
t(20,78,37) = 1
t(20,79,37) = 1
t(20,80,37) = 1
t(20,81,37) = 1
t(20,82,37) = 1
t(20,91,50) = 1
t(20,92,50) = 1
t(20,93,50) = 1
t(20,106,39) = 1
t(20,107,39) = 1
t(20,108,39) = 1
t(20,109,39) = 1
t(20,110,39) = 1
t(20,111,39) = 1
t(20,117,42) = 1
t(20,118,42) = 1
t(20,119,42) = 1
t(20,120,42) = 1
t(20,121,42) = 1
t(20,122,42) = 1
t(20,126,43) = 1
t(20,127,43) = 1
t(20,128,43) = 1
t(20,129,43) = 1
t(20,130,43) = 1
t(20,135,41) = 1
t(20,136,41) = 1
t(20,137,41) = 1
t(20,138,41) = 1
t(20,139,41) = 1
t(20,140,41) = 1
t(12,2,6) = 1
t(12,3,6) = 1
t(12,4,6) = 1
t(12,12,47) = 1
t(12,13,47) = 1
t(12,14,47) = 1
t(12,15,47) = 1
t(12,16,47) = 1
t(12,17,47) = 1
t(12,18,40) = 1
t(12,19,40) = 1
t(12,20,40) = 1
t(12,21,40) = 1
t(12,22,40) = 1
t(12,23,40) = 1
t(12,52,4) = 1
t(12,53,4) = 1
t(12,54,4) = 1
t(12,56,38) = 1
t(12,57,38) = 1
t(12,58,38) = 1
t(12,59,38) = 1
t(12,60,38) = 1
t(12,61,38) = 1
t(12,62,15) = 1
t(12,63,15) = 1
t(12,64,15) = 1
t(12,70,5) = 1
t(12,71,5) = 1
t(12,72,5) = 1
t(12,77,37) = 1
t(12,78,37) = 1
t(12,79,37) = 1
t(12,80,37) = 1
t(12,81,37) = 1
t(12,82,37) = 1
t(12,99,11) = 1
t(12,100,11) = 1
t(12,101,11) = 1
t(12,106,39) = 1
t(12,107,39) = 1
t(12,108,39) = 1
t(12,109,39) = 1
t(12,110,39) = 1
t(12,111,39) = 1
t(12,117,42) = 1
t(12,118,42) = 1
t(12,119,42) = 1
t(12,120,42) = 1
t(12,121,42) = 1
t(12,122,42) = 1
t(12,135,41) = 1
t(12,136,41) = 1
t(12,137,41) = 1
t(12,138,41) = 1
t(12,139,41) = 1
t(12,140,41) = 1
t(21,24,48) = 1
t(21,25,48) = 1
t(21,26,48) = 1
t(21,63,8) = 1
t(21,64,8) = 1
t(21,65,8) = 1
t(21,77,17) = 1
t(21,78,17) = 1
t(21,79,17) = 1
t(21,126,43) = 1
t(21,127,43) = 1
t(21,128,43) = 1
t(21,129,43) = 1
t(21,130,43) = 1
t(22,63,8) = 1
t(22,64,8) = 1
t(22,65,8) = 1
t(22,138,20) = 1
t(22,139,20) = 1
t(22,140,20) = 1
t(14,52,4) = 1
t(14,53,4) = 1
t(14,54,4) = 1
t(14,96,46) = 1
t(14,97,46) = 1
t(14,98,46) = 1
t(14,102,7) = 1
t(14,103,7) = 1
t(14,104,7) = 1
t(14,105,7) = 1
t(14,106,7) = 1
t(14,117,14) = 1
t(14,118,14) = 1
t(14,119,14) = 1
t(14,120,14) = 1
t(14,121,14) = 1
t(14,122,14) = 1
t(13,2,6) = 1
t(13,3,6) = 1
t(13,4,6) = 1
t(13,52,4) = 1
t(13,53,4) = 1
t(13,54,4) = 1
t(13,59,22) = 1
t(13,60,22) = 1
t(13,61,22) = 1
t(13,62,15) = 1
t(13,63,15) = 1
t(13,64,15) = 1
t(13,70,5) = 1
t(13,71,5) = 1
t(13,72,5) = 1
t(13,78,29) = 1
t(13,79,29) = 1
t(13,80,29) = 1
t(13,81,29) = 1
t(13,82,29) = 1
t(13,83,29) = 1
t(13,103,27) = 1
t(13,104,27) = 1
t(13,105,27) = 1
t(13,106,27) = 1
t(13,107,27) = 1
t(13,108,27) = 1
t(13,117,14) = 1
t(13,118,14) = 1
t(13,119,14) = 1
t(13,120,14) = 1
t(13,121,14) = 1
t(13,122,14) = 1
t(13,127,28) = 1
t(13,128,28) = 1
t(13,129,28) = 1
t(13,130,28) = 1
t(13,131,28) = 1
t(13,132,28) = 1
t(13,136,18) = 1
t(13,137,18) = 1
t(13,138,18) = 1
t(13,139,18) = 1
t(13,140,18) = 1
t(15,59,22) = 1
t(15,60,22) = 1
t(15,61,22) = 1
t(15,70,5) = 1
t(15,71,5) = 1
t(15,72,5) = 1
t(15,105,49) = 1
t(15,106,49) = 1
t(15,107,49) = 1
t(15,136,18) = 1
t(15,137,18) = 1
t(15,138,18) = 1
t(15,139,18) = 1
t(15,140,18) = 1
t(17,87,16) = 1
t(17,88,16) = 1
t(17,89,16) = 1
t(16,70,5) = 1
t(16,71,5) = 1
t(16,72,5) = 1
t(16,105,49) = 1
t(16,106,49) = 1
t(16,107,49) = 1
t(16,136,18) = 1
t(16,137,18) = 1
t(16,138,18) = 1
t(16,139,18) = 1
t(16,140,18) = 1
t(9,40,1) = 1
t(9,41,1) = 1
t(9,42,1) = 1
t(9,43,1) = 1
t(9,44,1) = 1
t(9,45,1) = 1
t(9,84,2) = 1
t(9,85,2) = 1
t(9,86,2) = 1
t(9,87,2) = 1
t(9,88,2) = 1
t(9,89,2) = 1
t(9,127,3) = 1
t(9,128,3) = 1
t(9,129,3) = 1
t(9,130,3) = 1
t(9,131,3) = 1
t(9,132,3) = 1
t(23,1,24) = 1
t(23,2,24) = 1
t(23,3,24) = 1
t(23,4,24) = 1
t(23,5,24) = 1
t(23,77,17) = 1
t(23,78,17) = 1
t(23,79,17) = 1
t(23,101,30) = 1
t(23,102,30) = 1
t(23,103,30) = 1
t(23,116,23) = 1
t(23,117,23) = 1
t(23,118,23) = 1
t(23,119,23) = 1
t(23,120,23) = 1
t(23,121,23) = 1
t(11,1,24) = 1
t(11,2,24) = 1
t(11,3,24) = 1
t(11,4,24) = 1
t(11,5,24) = 1
t(11,91,9) = 1
t(11,92,9) = 1
t(11,93,9) = 1
t(11,99,11) = 1
t(11,100,11) = 1
t(11,101,11) = 1
t(11,116,23) = 1
t(11,117,23) = 1
t(11,118,23) = 1
t(11,119,23) = 1
t(11,120,23) = 1
t(11,121,23) = 1
t(11,130,26) = 1
t(11,131,26) = 1
t(11,132,26) = 1
t(11,133,25) = 1
t(11,134,25) = 1
t(11,135,25) = 1
t(11,136,25) = 1
t(11,137,25) = 1
t(11,138,25) = 1
t(10,119,13) = 1
t(10,120,13) = 1
t(10,121,13) = 1
t(10,122,13) = 1
t(10,123,13) = 1
t(10,124,13) = 1
t(25,91,9) = 1
t(25,92,9) = 1
t(25,93,9) = 1
t(25,118,32) = 1
t(25,119,32) = 1
t(25,120,32) = 1
t(25,121,32) = 1
t(25,122,32) = 1
t(24,24,36) = 1
t(24,25,36) = 1
t(24,26,36) = 1
t(24,63,8) = 1
t(24,64,8) = 1
t(24,65,8) = 1
t(24,91,9) = 1
t(24,92,9) = 1
t(24,93,9) = 1
t(24,138,20) = 1
t(24,139,20) = 1
t(24,140,20) = 1
t(7,39,33) = 1
t(7,40,33) = 1
t(7,41,33) = 1
t(7,42,33) = 1
t(7,43,33) = 1
t(7,44,33) = 1
t(7,119,31) = 1
t(7,120,31) = 1
t(7,121,31) = 1
t(4,7,10) = 1
t(4,8,10) = 1
t(4,9,10) = 1
t(4,119,31) = 1
t(4,120,31) = 1
t(4,121,31) = 1
t(3,120,45) = 1
t(3,121,45) = 1
t(3,122,45) = 1
t(19,3,21) = 1
t(19,4,21) = 1
t(19,5,21) = 1
t(19,87,16) = 1
t(19,88,16) = 1
t(19,89,16) = 1
t(19,102,7) = 1
t(19,103,7) = 1
t(19,104,7) = 1
t(19,105,7) = 1
t(19,106,7) = 1
t(8,15,19) = 1
t(8,16,19) = 1
t(8,17,19) = 1
t(8,18,19) = 1
t(8,19,19) = 1
t(6,107,12) = 1
t(6,108,12) = 1
t(6,109,12) = 1
t(6,110,12) = 1
t(6,111,12) = 1
t(5,22,34) = 1
t(5,23,34) = 1
t(5,24,34) = 1
t(2,130,44) = 1
t(2,131,44) = 1
t(2,132,44) = 1
t(2,133,44) = 1
t(2,134,44) = 1
t(1,131,35) = 1
t(1,132,35) = 1
t(1,133,35) = 1
maxSlice(19) = 140
maxSlice(11) = 140
maxSlice(20) = 140
maxSlice(21) = 140
maxSlice(13) = 140
maxSlice(12) = 140
maxSlice(14) = 140
maxSlice(16) = 140
maxSlice(15) = 140
maxSlice(8) = 140
maxSlice(22) = 140
maxSlice(10) = 140
maxSlice(9) = 140
maxSlice(24) = 140
maxSlice(23) = 140
maxSlice(6) = 140
maxSlice(3) = 140
maxSlice(2) = 140
maxSlice(18) = 140
maxSlice(7) = 140
maxSlice(5) = 140
maxSlice(4) = 140
maxSlice(1) = 140
maxSlice(17) = 140
maxSlice(0) = 140
maxSlice = 139
Update RSA
Feasible

--- Slice occupation ---
#1.                                                                                                                                   ***       
#2.                                                                                                                                  *****      
#3.                                                                                                                        ***                  
#4.       ***                                                                                                             ***                   
#5.                      ***                                                                                                                    
#6.                                                                                                           *****                             
#7.                                       ******                                                                          ***                   
#8.               *****                                                                                                                         
#9.                                        ******                                      ******                                     ******        
#10.                                                                                                                       ******                
#11. *****                                                                                     ***     ***              ******        *********  
#12.  ***       ************                            *** *********     ***    ******                ***    ******     ******            ******
#13.  ***                                               ***    ******     ***     ******                   ******        ******    ******   *****
#14.                                                    ***                                         ***   *****          ******                  
#15.                                                           ***        ***                                ***                            *****
#16.                                                                      ***                                ***                            *****
#17.                                                                                       ***                                                   
#18.                                                                                                                                             
#19.   ***                                                                                 ***            *****                                  
#20.  ***             ******                                ******               ******        ***            ******     ******   *****    ******
#21.                        ***                                    ***           ***                                              *****          
#22.                                                               ***                                                                        ***
#23. *****                                                                       ***                     ***            ******                   
#24.                        ***                                    ***                         ***                                            ***
#25.                                                                                           ***                        *****                  

For demand 1 : 
(7--15, 45)

For demand 2 : 
(7--15, 89)

For demand 3 : 
(7--15, 132)

For demand 4 : 
(10--16, 54)
(10--15, 54)
(13--15, 54)
(15--10, 54)

For demand 5 : 
(8--9, 72)
(9--10, 72)
(10--9, 72)
(10--15, 72)
(15--10, 72)
(15--13, 72)

For demand 6 : 
(10--15, 4)
(13--17, 4)
(13--15, 4)
(15--13, 4)

For demand 7 : 
(16--10, 106)
(2--16, 106)

For demand 8 : 
(5--11, 65)
(11--12, 65)
(12--11, 65)
(12--17, 65)

For demand 9 : 
(5--6, 93)
(11--5, 93)
(6--5, 93)
(6--15, 93)

For demand 10 : 
(3--4, 9)

For demand 11 : 
(6--15, 101)
(15--13, 101)

For demand 12 : 
(2--4, 111)

For demand 13 : 
(6--7, 124)

For demand 14 : 
(10--16, 122)
(15--10, 122)

For demand 15 : 
(10--15, 64)
(15--13, 64)

For demand 16 : 
(16--8, 89)
(2--16, 89)

For demand 17 : 
(12--17, 79)
(6--12, 79)

For demand 18 : 
(8--9, 140)
(9--10, 140)
(10--9, 140)
(10--15, 140)

For demand 19 : 
(2--7, 19)

For demand 20 : 
(5--11, 140)
(11--12, 140)

For demand 21 : 
(2--16, 5)

For demand 22 : 
(9--10, 61)
(10--15, 61)

For demand 23 : 
(12--6, 121)
(6--15, 121)

For demand 24 : 
(12--6, 5)
(6--15, 5)

For demand 25 : 
(6--15, 138)

For demand 26 : 
(6--15, 132)

For demand 27 : 
(10--15, 108)

For demand 28 : 
(10--15, 132)

For demand 29 : 
(10--15, 83)

For demand 30 : 
(6--12, 103)

For demand 31 : 
(4--7, 121)
(3--4, 121)

For demand 32 : 
(5--6, 122)

For demand 33 : 
(4--7, 44)

For demand 34 : 
(2--3, 24)

For demand 35 : 
(1--14, 133)

For demand 36 : 
(5--11, 26)

For demand 37 : 
(13--17, 82)
(15--13, 82)

For demand 38 : 
(13--17, 61)
(15--13, 61)

For demand 39 : 
(13--17, 111)
(15--13, 111)

For demand 40 : 
(13--17, 23)
(15--13, 23)

For demand 41 : 
(13--17, 140)
(15--13, 140)

For demand 42 : 
(13--17, 122)
(15--13, 122)

For demand 43 : 
(12--17, 130)
(17--13, 130)

For demand 44 : 
(2--14, 134)

For demand 45 : 
(3--14, 122)

For demand 46 : 
(10--16, 98)

For demand 47 : 
(13--15, 17)

For demand 48 : 
(12--17, 26)

For demand 49 : 
(8--9, 107)
(9--10, 107)

For demand 50 : 
(13--17, 93)

Output 50Demand_1
Output EdgeSliceHols: 50Demand_1
Time taken by iteration is : 5207.169613 sec
Output 50Demand_FINAL
Output EdgeSliceHols: 50Demand_FINAL

--- The Demands ---
#1. 7 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#2. 7 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#3. 7 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#4. 13 -- 16. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#5. 8 -- 13. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#6. 10 -- 17. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#7. 2 -- 10. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#8. 5 -- 17. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#9. 11 -- 15. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#10. 3 -- 4. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#11. 6 -- 13. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#12. 2 -- 4. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#13. 6 -- 7. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#14. 15 -- 16. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#15. 10 -- 13. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#16. 2 -- 8. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#17. 6 -- 17. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#18. 8 -- 15. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#19. 2 -- 7. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#20. 5 -- 12. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#21. 2 -- 16. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#22. 9 -- 15. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#23. 12 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#24. 12 -- 15. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#25. 6 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#26. 6 -- 15. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#27. 10 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#28. 10 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#29. 10 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#30. 6 -- 12. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#31. 3 -- 7. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#32. 5 -- 6. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#33. 4 -- 7. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#34. 2 -- 3. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#35. 1 -- 14. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#36. 5 -- 11. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#37. 15 -- 17. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#38. 15 -- 17. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#39. 15 -- 17. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#40. 15 -- 17. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#41. 15 -- 17. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#42. 15 -- 17. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#43. 12 -- 13. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#44. 2 -- 14. nbSlices: 5, maxLength: 1500.000000000, ROUTED: YES
#45. 3 -- 14. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#46. 10 -- 16. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#47. 13 -- 15. nbSlices: 6, maxLength: 600.000000000, ROUTED: YES
#48. 12 -- 17. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#49. 8 -- 10. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES
#50. 13 -- 17. nbSlices: 3, maxLength: 3000.000000000, ROUTED: YES

Time taken by optimization is : 5207.199079400 sec
Total time taken by program is : 5207.209375600 sec
